[02/27 16:30:00] detectron2 INFO: Rank of current process: 0. World size: 4
[02/27 16:30:06] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.5
detectron2              0.6 @/home/nstarli/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 11.5
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.9.0 @/home/nstarli/anaconda3/envs/mask2former/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             Tesla V100-SXM2-32GB (arch=7.0)
Driver version          495.29.05
CUDA_HOME               /usr/local/cuda-11
Pillow                  8.4.0
torchvision             0.10.0 @/home/nstarli/anaconda3/envs/mask2former/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.4
----------------------  ----------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[02/27 16:30:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/sceneflow/semantic-segmentation/maskformer2stereo_R50_bs16_90k.yaml', dist_url='tcp://127.0.0.1:61200', eval_only=False, machine_rank=0, num_gpus=4, num_machines=1, opts=[], resume=False)
[02/27 16:30:06] detectron2 INFO: Contents of args.config_file=configs/sceneflow/semantic-segmentation/maskformer2stereo_R50_bs16_90k.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-SceneFlow-SemanticSegmentationStereo.yaml[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerStereo[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mGN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;242m# pixel decoder[39m
[38;5;15m    [39m[38;5;197mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMSDeformAttnPixelDecoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mDEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;197mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMultiScaleMaskedTransformerDecoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mmulti_scale_pixel_decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;197mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mSEG_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;197mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;197mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;197mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m    [39m[38;5;197mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;197mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m[38;5;15m  [39m[38;5;242m# 9 decoder layers, add one for the loss on learnable query[39m
[38;5;15m    [39m[38;5;197mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;197mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;197mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m      [39m[38;5;197mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;197mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;197mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m

[02/27 16:30:06] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mROOT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/Datasets/sceneflow[39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141msceneflow_test[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141msceneflow_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mabsolute[39m
[38;5;15m  [39m[38;5;197mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmask_former_sceneflow[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;197mIMAGE_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m  [39m[38;5;197mMIN_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m540[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m270[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m324[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m378[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m432[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m486[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m540[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m594[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m648[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m702[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m756[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;197mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;197mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;197mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;197mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;197mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;197mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mSEG_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;197mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;197mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;197mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;197mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMultiScaleMaskedTransformerDecoder[39m
[38;5;15m    [39m[38;5;197mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmulti_scale_pixel_decoder[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerStereo[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbasic[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mDEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mDEFORMABLE_TRANSFORMER_ENCODER_N_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;197mDEFORMABLE_TRANSFORMER_ENCODER_N_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;197mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMSDeformAttnPixelDecoder[39m
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;197mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;197mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;197mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;197mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;197mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;197mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;197mUSE_CHECKPOINT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/torchvision/R-50.pkl[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./work_dirs/r101_48classes_fixedmatching_finesmoothl1_refinepsmcost[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupPolyLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m60000[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;197mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m384[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m540[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m672[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2500[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[02/27 16:30:06] detectron2 INFO: Full config saved to ./work_dirs/r101_48classes_fixedmatching_finesmoothl1_refinepsmcost/config.yaml
[02/27 16:30:07] d2.utils.env INFO: Using a generated random seed 7076944
[02/27 16:30:09] d2.engine.defaults INFO: Model:
MaskFormerStereo(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(4096, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0): MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
            (1): MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
            (2): MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0): SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
        (1): SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
        (2): SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0): CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
        (1): CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
        (2): CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0): FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (1): FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
        (2): FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(48, 256)
      (query_embed): Embedding(48, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0): Sequential()
        (1): Sequential()
        (2): Sequential()
      )
      (class_embed): Linear(in_features=256, out_features=49, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0): Linear(in_features=256, out_features=256, bias=True)
          (1): Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (refinement_layer): PSMNet(
    (dres0): Sequential(
      (0): Sequential(
        (0): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ReLU(inplace=True)
      (2): Sequential(
        (0): Conv3d(256, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (3): ReLU(inplace=True)
    )
    (dres1): Sequential(
      (0): Sequential(
        (0): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ReLU(inplace=True)
      (2): Sequential(
        (0): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (dres2): hourglass(
      (conv1): Sequential(
        (0): Sequential(
          (0): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1), bias=False)
          (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ReLU(inplace=True)
      )
      (conv2): Sequential(
        (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv3): Sequential(
        (0): Sequential(
          (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1), bias=False)
          (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ReLU(inplace=True)
      )
      (conv4): Sequential(
        (0): Sequential(
          (0): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
          (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ReLU(inplace=True)
      )
      (conv5): Sequential(
        (0): ConvTranspose3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1), output_padding=(0, 1, 1), bias=False)
        (1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv6): Sequential(
        (0): ConvTranspose3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1), output_padding=(0, 1, 1), bias=False)
        (1): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (classif1): Sequential(
      (0): Sequential(
        (0): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (1): BatchNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ReLU(inplace=True)
      (2): Conv3d(32, 1, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
    )
  )
  (criterion): Criterion SetCriterionStereo
      matcher: Matcher FixedMatcher
      losses: ['labels', 'masks', 'segs']
      weight_dict: {'loss_mask': 5.0, 'loss_ce': 0.0, 'loss_dice': 1.0, 'loss_seg': 0.1, 'loss_mask_0': 5.0, 'loss_ce_0': 0.0, 'loss_dice_0': 1.0, 'loss_mask_1': 5.0, 'loss_ce_1': 0.0, 'loss_dice_1': 1.0, 'loss_mask_2': 5.0, 'loss_ce_2': 0.0, 'loss_dice_2': 1.0}
      num_classes: 48
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
)
[02/27 16:30:09] mask2former.data.dataset_mappers.mask_former_sceneflow_dataset_mapper INFO: [MaskFormerSceneFlowDatasetMapper] Augmentations used in training: [RandomCrop_CategoryAreaConstraint(crop_type='absolute', crop_size=[256, 512], single_category_max_area=1.0, ignored_category=0)]
[02/27 16:30:17] d2.data.build INFO: Using training sampler TrainingSampler
[02/27 16:30:17] d2.data.common INFO: Serializing 35454 elements to byte tensors and concatenating them all ...
[02/27 16:30:18] d2.data.common INFO: Serialized dataset takes 10.76 MiB
[02/27 16:30:18] fvcore.common.checkpoint INFO: [Checkpointer] Loading from detectron2://ImageNetPretrained/torchvision/R-50.pkl ...
[02/27 16:30:18] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[02/27 16:30:18] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint                                                               | Shapes                                          |
|:------------------|:----------------------------------------------------------------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4.4.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4.4.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4.4.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4.5.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4.5.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4.5.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.*      | stem.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,3,7,7)              |
[02/27 16:30:19] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mcriterion.empty_weight[0m
[34mrefinement_layer.classif1.0.0.weight[0m
[34mrefinement_layer.classif1.0.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.classif1.2.weight[0m
[34mrefinement_layer.dres0.0.0.weight[0m
[34mrefinement_layer.dres0.0.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres0.2.0.weight[0m
[34mrefinement_layer.dres0.2.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres1.0.0.weight[0m
[34mrefinement_layer.dres1.0.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres1.2.0.weight[0m
[34mrefinement_layer.dres1.2.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres2.conv1.0.0.weight[0m
[34mrefinement_layer.dres2.conv1.0.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres2.conv2.0.weight[0m
[34mrefinement_layer.dres2.conv2.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres2.conv3.0.0.weight[0m
[34mrefinement_layer.dres2.conv3.0.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres2.conv4.0.0.weight[0m
[34mrefinement_layer.dres2.conv4.0.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres2.conv5.0.weight[0m
[34mrefinement_layer.dres2.conv5.1.{bias, running_mean, running_var, weight}[0m
[34mrefinement_layer.dres2.conv6.0.weight[0m
[34mrefinement_layer.dres2.conv6.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.input_proj.0.0.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.input_proj.0.1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.input_proj.1.0.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.input_proj.1.1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.input_proj.2.0.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.input_proj.2.1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.norm.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.layer_1.weight[0m
[34msem_seg_head.pixel_decoder.mask_features.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.norm1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.norm2.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.self_attn.attention_weights.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.self_attn.output_proj.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.self_attn.sampling_offsets.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.0.self_attn.value_proj.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.norm1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.norm2.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.self_attn.attention_weights.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.self_attn.output_proj.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.self_attn.sampling_offsets.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.1.self_attn.value_proj.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.norm1.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.norm2.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.self_attn.attention_weights.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.self_attn.output_proj.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.self_attn.sampling_offsets.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.encoder.layers.2.self_attn.value_proj.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.transformer.level_embed[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.decoder_norm.{bias, weight}[0m
[34msem_seg_head.predictor.level_embed.weight[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.query_feat.weight[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.multihead_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.multihead_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[02/27 16:30:19] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.{bias, weight}[0m
[02/27 16:30:19] d2.engine.train_loop INFO: Starting training from iteration 0
[02/27 16:31:17] d2.utils.events INFO:  eta: 1 day, 13:30:27  iter: 19  total_loss: 12.46  loss_ce: 0  loss_mask: 1.187  loss_dice: 0.9593  loss_seg: 4.526  loss_ce_0: 0  loss_mask_0: 1.153  loss_dice_0: 0.9585  loss_ce_1: 0  loss_mask_1: 1.143  loss_dice_1: 0.9595  loss_ce_2: 0  loss_mask_2: 1.18  loss_dice_2: 0.9591  time: 2.2083  data_time: 0.6358  lr: 9.9971e-05  max_mem: 4824M
[02/27 16:31:54] d2.utils.events INFO:  eta: 1 day, 9:55:15  iter: 39  total_loss: 10.36  loss_ce: 0  loss_mask: 1.015  loss_dice: 0.9589  loss_seg: 2.524  loss_ce_0: 0  loss_mask_0: 1.032  loss_dice_0: 0.9579  loss_ce_1: 0  loss_mask_1: 1.017  loss_dice_1: 0.9567  loss_ce_2: 0  loss_mask_2: 1.022  loss_dice_2: 0.9583  time: 2.0212  data_time: 0.0403  lr: 9.9941e-05  max_mem: 4824M
[02/27 16:32:29] d2.utils.events INFO:  eta: 1 day, 6:32:57  iter: 59  total_loss: 10.31  loss_ce: 0  loss_mask: 1.099  loss_dice: 0.954  loss_seg: 2.15  loss_ce_0: 0  loss_mask_0: 1.064  loss_dice_0: 0.948  loss_ce_1: 0  loss_mask_1: 1.086  loss_dice_1: 0.95  loss_ce_2: 0  loss_mask_2: 1.099  loss_dice_2: 0.9469  time: 1.9131  data_time: 0.0359  lr: 9.9911e-05  max_mem: 4824M
[02/27 16:33:03] d2.utils.events INFO:  eta: 1 day, 5:43:42  iter: 79  total_loss: 10.15  loss_ce: 0  loss_mask: 1.134  loss_dice: 0.9466  loss_seg: 1.736  loss_ce_0: 0  loss_mask_0: 1.181  loss_dice_0: 0.9379  loss_ce_1: 0  loss_mask_1: 1.18  loss_dice_1: 0.9358  loss_ce_2: 0  loss_mask_2: 1.174  loss_dice_2: 0.939  time: 1.8594  data_time: 0.0458  lr: 9.9881e-05  max_mem: 4824M
[02/27 16:33:36] d2.utils.events INFO:  eta: 1 day, 5:18:12  iter: 99  total_loss: 10.1  loss_ce: 0  loss_mask: 1.128  loss_dice: 0.9474  loss_seg: 1.723  loss_ce_0: 0  loss_mask_0: 1.155  loss_dice_0: 0.9328  loss_ce_1: 0  loss_mask_1: 1.17  loss_dice_1: 0.932  loss_ce_2: 0  loss_mask_2: 1.139  loss_dice_2: 0.9352  time: 1.8220  data_time: 0.0372  lr: 9.9851e-05  max_mem: 4824M
[02/27 16:34:11] d2.utils.events INFO:  eta: 1 day, 5:10:11  iter: 119  total_loss: 10.45  loss_ce: 0  loss_mask: 1.22  loss_dice: 0.9374  loss_seg: 1.608  loss_ce_0: 0  loss_mask_0: 1.277  loss_dice_0: 0.9243  loss_ce_1: 0  loss_mask_1: 1.291  loss_dice_1: 0.9221  loss_ce_2: 0  loss_mask_2: 1.276  loss_dice_2: 0.9257  time: 1.8036  data_time: 0.0382  lr: 9.9821e-05  max_mem: 4825M
[02/27 16:34:45] d2.utils.events INFO:  eta: 1 day, 5:06:51  iter: 139  total_loss: 10.1  loss_ce: 0  loss_mask: 1.235  loss_dice: 0.937  loss_seg: 1.443  loss_ce_0: 0  loss_mask_0: 1.256  loss_dice_0: 0.9204  loss_ce_1: 0  loss_mask_1: 1.273  loss_dice_1: 0.9179  loss_ce_2: 0  loss_mask_2: 1.257  loss_dice_2: 0.917  time: 1.7899  data_time: 0.0509  lr: 9.9791e-05  max_mem: 4825M
[02/27 16:35:20] d2.utils.events INFO:  eta: 1 day, 5:06:57  iter: 159  total_loss: 9.987  loss_ce: 0  loss_mask: 1.229  loss_dice: 0.9321  loss_seg: 1.343  loss_ce_0: 0  loss_mask_0: 1.232  loss_dice_0: 0.9162  loss_ce_1: 0  loss_mask_1: 1.248  loss_dice_1: 0.9127  loss_ce_2: 0  loss_mask_2: 1.254  loss_dice_2: 0.9158  time: 1.7857  data_time: 0.0459  lr: 9.9761e-05  max_mem: 4825M
[02/27 16:35:54] d2.utils.events INFO:  eta: 1 day, 5:06:22  iter: 179  total_loss: 10.12  loss_ce: 0  loss_mask: 1.295  loss_dice: 0.9286  loss_seg: 1.383  loss_ce_0: 0  loss_mask_0: 1.293  loss_dice_0: 0.9167  loss_ce_1: 0  loss_mask_1: 1.298  loss_dice_1: 0.9142  loss_ce_2: 0  loss_mask_2: 1.287  loss_dice_2: 0.9164  time: 1.7743  data_time: 0.0382  lr: 9.9731e-05  max_mem: 4825M
[02/27 16:36:28] d2.utils.events INFO:  eta: 1 day, 4:52:30  iter: 199  total_loss: 10.36  loss_ce: 0  loss_mask: 1.29  loss_dice: 0.9259  loss_seg: 1.321  loss_ce_0: 0  loss_mask_0: 1.279  loss_dice_0: 0.9088  loss_ce_1: 0  loss_mask_1: 1.289  loss_dice_1: 0.9069  loss_ce_2: 0  loss_mask_2: 1.285  loss_dice_2: 0.9093  time: 1.7659  data_time: 0.0352  lr: 9.9701e-05  max_mem: 4825M
[02/27 16:36:59] d2.utils.events INFO:  eta: 1 day, 4:16:15  iter: 219  total_loss: 10.36  loss_ce: 0  loss_mask: 1.263  loss_dice: 0.9292  loss_seg: 1.453  loss_ce_0: 0  loss_mask_0: 1.289  loss_dice_0: 0.9061  loss_ce_1: 0  loss_mask_1: 1.306  loss_dice_1: 0.9017  loss_ce_2: 0  loss_mask_2: 1.293  loss_dice_2: 0.9083  time: 1.7479  data_time: 0.0422  lr: 9.9671e-05  max_mem: 4825M
[02/27 16:37:32] d2.utils.events INFO:  eta: 1 day, 4:08:09  iter: 239  total_loss: 10.33  loss_ce: 0  loss_mask: 1.299  loss_dice: 0.9272  loss_seg: 1.375  loss_ce_0: 0  loss_mask_0: 1.304  loss_dice_0: 0.9087  loss_ce_1: 0  loss_mask_1: 1.328  loss_dice_1: 0.9054  loss_ce_2: 0  loss_mask_2: 1.327  loss_dice_2: 0.9075  time: 1.7386  data_time: 0.0358  lr: 9.9641e-05  max_mem: 4825M
[02/27 16:38:08] d2.utils.events INFO:  eta: 1 day, 4:12:45  iter: 259  total_loss: 10.45  loss_ce: 0  loss_mask: 1.317  loss_dice: 0.9202  loss_seg: 1.382  loss_ce_0: 0  loss_mask_0: 1.345  loss_dice_0: 0.9033  loss_ce_1: 0  loss_mask_1: 1.329  loss_dice_1: 0.9017  loss_ce_2: 0  loss_mask_2: 1.304  loss_dice_2: 0.9067  time: 1.7404  data_time: 0.0379  lr: 9.9611e-05  max_mem: 4825M
[02/27 16:38:41] d2.utils.events INFO:  eta: 1 day, 4:07:50  iter: 279  total_loss: 10.27  loss_ce: 0  loss_mask: 1.348  loss_dice: 0.9147  loss_seg: 1.226  loss_ce_0: 0  loss_mask_0: 1.316  loss_dice_0: 0.9027  loss_ce_1: 0  loss_mask_1: 1.315  loss_dice_1: 0.8975  loss_ce_2: 0  loss_mask_2: 1.294  loss_dice_2: 0.9025  time: 1.7347  data_time: 0.0375  lr: 9.9581e-05  max_mem: 4825M
[02/27 16:39:14] d2.utils.events INFO:  eta: 1 day, 4:06:27  iter: 299  total_loss: 10.06  loss_ce: 0  loss_mask: 1.324  loss_dice: 0.92  loss_seg: 1.292  loss_ce_0: 0  loss_mask_0: 1.279  loss_dice_0: 0.9052  loss_ce_1: 0  loss_mask_1: 1.294  loss_dice_1: 0.9025  loss_ce_2: 0  loss_mask_2: 1.278  loss_dice_2: 0.9059  time: 1.7272  data_time: 0.0475  lr: 9.9551e-05  max_mem: 4825M
[02/27 16:39:46] d2.utils.events INFO:  eta: 1 day, 4:02:52  iter: 319  total_loss: 10.27  loss_ce: 0  loss_mask: 1.366  loss_dice: 0.9131  loss_seg: 1.184  loss_ce_0: 0  loss_mask_0: 1.328  loss_dice_0: 0.8908  loss_ce_1: 0  loss_mask_1: 1.338  loss_dice_1: 0.8876  loss_ce_2: 0  loss_mask_2: 1.319  loss_dice_2: 0.8924  time: 1.7199  data_time: 0.0462  lr: 9.9521e-05  max_mem: 4825M
[02/27 16:40:20] d2.utils.events INFO:  eta: 1 day, 4:03:17  iter: 339  total_loss: 10.13  loss_ce: 0  loss_mask: 1.344  loss_dice: 0.9176  loss_seg: 1.205  loss_ce_0: 0  loss_mask_0: 1.308  loss_dice_0: 0.9012  loss_ce_1: 0  loss_mask_1: 1.321  loss_dice_1: 0.8963  loss_ce_2: 0  loss_mask_2: 1.323  loss_dice_2: 0.8982  time: 1.7188  data_time: 0.0433  lr: 9.9491e-05  max_mem: 4825M
[02/27 16:40:54] d2.utils.events INFO:  eta: 1 day, 4:01:45  iter: 359  total_loss: 10.27  loss_ce: 0  loss_mask: 1.406  loss_dice: 0.9103  loss_seg: 1.149  loss_ce_0: 0  loss_mask_0: 1.376  loss_dice_0: 0.8917  loss_ce_1: 0  loss_mask_1: 1.375  loss_dice_1: 0.8878  loss_ce_2: 0  loss_mask_2: 1.358  loss_dice_2: 0.8912  time: 1.7164  data_time: 0.0358  lr: 9.9461e-05  max_mem: 4825M
[02/27 16:41:27] d2.utils.events INFO:  eta: 1 day, 3:58:19  iter: 379  total_loss: 10.18  loss_ce: 0  loss_mask: 1.435  loss_dice: 0.9056  loss_seg: 1.077  loss_ce_0: 0  loss_mask_0: 1.38  loss_dice_0: 0.8925  loss_ce_1: 0  loss_mask_1: 1.385  loss_dice_1: 0.8881  loss_ce_2: 0  loss_mask_2: 1.37  loss_dice_2: 0.8915  time: 1.7138  data_time: 0.0452  lr: 9.9431e-05  max_mem: 4825M
[02/27 16:42:01] d2.utils.events INFO:  eta: 1 day, 3:55:28  iter: 399  total_loss: 10.22  loss_ce: 0  loss_mask: 1.435  loss_dice: 0.9053  loss_seg: 1.097  loss_ce_0: 0  loss_mask_0: 1.371  loss_dice_0: 0.8909  loss_ce_1: 0  loss_mask_1: 1.393  loss_dice_1: 0.8861  loss_ce_2: 0  loss_mask_2: 1.397  loss_dice_2: 0.8881  time: 1.7134  data_time: 0.0477  lr: 9.9401e-05  max_mem: 4825M
[02/27 16:42:34] d2.utils.events INFO:  eta: 1 day, 3:50:38  iter: 419  total_loss: 10.19  loss_ce: 0  loss_mask: 1.385  loss_dice: 0.9072  loss_seg: 1.138  loss_ce_0: 0  loss_mask_0: 1.382  loss_dice_0: 0.8904  loss_ce_1: 0  loss_mask_1: 1.37  loss_dice_1: 0.8855  loss_ce_2: 0  loss_mask_2: 1.368  loss_dice_2: 0.8879  time: 1.7098  data_time: 0.0346  lr: 9.9371e-05  max_mem: 4825M
[02/27 16:43:06] d2.utils.events INFO:  eta: 1 day, 3:48:03  iter: 439  total_loss: 10.25  loss_ce: 0  loss_mask: 1.404  loss_dice: 0.9066  loss_seg: 1.159  loss_ce_0: 0  loss_mask_0: 1.363  loss_dice_0: 0.8911  loss_ce_1: 0  loss_mask_1: 1.373  loss_dice_1: 0.8876  loss_ce_2: 0  loss_mask_2: 1.369  loss_dice_2: 0.8884  time: 1.7048  data_time: 0.0485  lr: 9.9341e-05  max_mem: 4825M
[02/27 16:43:39] d2.utils.events INFO:  eta: 1 day, 3:46:32  iter: 459  total_loss: 10.19  loss_ce: 0  loss_mask: 1.391  loss_dice: 0.9085  loss_seg: 1.204  loss_ce_0: 0  loss_mask_0: 1.34  loss_dice_0: 0.8954  loss_ce_1: 0  loss_mask_1: 1.352  loss_dice_1: 0.8921  loss_ce_2: 0  loss_mask_2: 1.348  loss_dice_2: 0.8941  time: 1.7019  data_time: 0.0362  lr: 9.9311e-05  max_mem: 4826M
[02/27 16:44:10] d2.utils.events INFO:  eta: 1 day, 3:41:11  iter: 479  total_loss: 10.29  loss_ce: 0  loss_mask: 1.465  loss_dice: 0.8943  loss_seg: 1.01  loss_ce_0: 0  loss_mask_0: 1.436  loss_dice_0: 0.8803  loss_ce_1: 0  loss_mask_1: 1.435  loss_dice_1: 0.8762  loss_ce_2: 0  loss_mask_2: 1.418  loss_dice_2: 0.8785  time: 1.6957  data_time: 0.0384  lr: 9.9281e-05  max_mem: 4826M
[02/27 16:44:44] d2.utils.events INFO:  eta: 1 day, 3:40:37  iter: 499  total_loss: 10.09  loss_ce: 0  loss_mask: 1.398  loss_dice: 0.9036  loss_seg: 0.9936  loss_ce_0: 0  loss_mask_0: 1.334  loss_dice_0: 0.8863  loss_ce_1: 0  loss_mask_1: 1.342  loss_dice_1: 0.884  loss_ce_2: 0  loss_mask_2: 1.347  loss_dice_2: 0.8867  time: 1.6945  data_time: 0.0349  lr: 9.9251e-05  max_mem: 4826M
[02/27 16:45:13] d2.utils.events INFO:  eta: 1 day, 3:32:35  iter: 519  total_loss: 10.09  loss_ce: 0  loss_mask: 1.403  loss_dice: 0.8978  loss_seg: 1.077  loss_ce_0: 0  loss_mask_0: 1.351  loss_dice_0: 0.8822  loss_ce_1: 0  loss_mask_1: 1.367  loss_dice_1: 0.8784  loss_ce_2: 0  loss_mask_2: 1.365  loss_dice_2: 0.8802  time: 1.6862  data_time: 0.0267  lr: 9.9221e-05  max_mem: 4826M
[02/27 16:45:43] d2.utils.events INFO:  eta: 1 day, 3:18:49  iter: 539  total_loss: 10.15  loss_ce: 0  loss_mask: 1.428  loss_dice: 0.894  loss_seg: 0.9492  loss_ce_0: 0  loss_mask_0: 1.371  loss_dice_0: 0.8799  loss_ce_1: 0  loss_mask_1: 1.365  loss_dice_1: 0.8764  loss_ce_2: 0  loss_mask_2: 1.367  loss_dice_2: 0.8776  time: 1.6780  data_time: 0.0270  lr: 9.9191e-05  max_mem: 4826M
[02/27 16:46:12] d2.utils.events INFO:  eta: 1 day, 3:12:28  iter: 559  total_loss: 10.3  loss_ce: 0  loss_mask: 1.486  loss_dice: 0.8897  loss_seg: 1.014  loss_ce_0: 0  loss_mask_0: 1.4  loss_dice_0: 0.8743  loss_ce_1: 0  loss_mask_1: 1.423  loss_dice_1: 0.8693  loss_ce_2: 0  loss_mask_2: 1.425  loss_dice_2: 0.8709  time: 1.6702  data_time: 0.0287  lr: 9.9161e-05  max_mem: 4826M
[02/27 16:46:42] d2.utils.events INFO:  eta: 1 day, 3:06:12  iter: 579  total_loss: 10.17  loss_ce: 0  loss_mask: 1.441  loss_dice: 0.8922  loss_seg: 1.003  loss_ce_0: 0  loss_mask_0: 1.389  loss_dice_0: 0.8821  loss_ce_1: 0  loss_mask_1: 1.392  loss_dice_1: 0.878  loss_ce_2: 0  loss_mask_2: 1.393  loss_dice_2: 0.8784  time: 1.6646  data_time: 0.0298  lr: 9.9131e-05  max_mem: 4826M
[02/27 16:47:13] d2.utils.events INFO:  eta: 1 day, 3:03:42  iter: 599  total_loss: 10.27  loss_ce: 0  loss_mask: 1.469  loss_dice: 0.9007  loss_seg: 1.05  loss_ce_0: 0  loss_mask_0: 1.392  loss_dice_0: 0.8816  loss_ce_1: 0  loss_mask_1: 1.408  loss_dice_1: 0.8799  loss_ce_2: 0  loss_mask_2: 1.41  loss_dice_2: 0.8805  time: 1.6609  data_time: 0.0269  lr: 9.9101e-05  max_mem: 4826M
[02/27 16:47:45] d2.utils.events INFO:  eta: 1 day, 3:02:44  iter: 619  total_loss: 10.1  loss_ce: 0  loss_mask: 1.409  loss_dice: 0.8911  loss_seg: 0.9901  loss_ce_0: 0  loss_mask_0: 1.383  loss_dice_0: 0.8762  loss_ce_1: 0  loss_mask_1: 1.392  loss_dice_1: 0.8747  loss_ce_2: 0  loss_mask_2: 1.386  loss_dice_2: 0.8764  time: 1.6585  data_time: 0.0245  lr: 9.9071e-05  max_mem: 4826M
[02/27 16:48:16] d2.utils.events INFO:  eta: 1 day, 3:00:06  iter: 639  total_loss: 10.08  loss_ce: 0  loss_mask: 1.443  loss_dice: 0.8937  loss_seg: 0.9286  loss_ce_0: 0  loss_mask_0: 1.386  loss_dice_0: 0.8773  loss_ce_1: 0  loss_mask_1: 1.396  loss_dice_1: 0.8748  loss_ce_2: 0  loss_mask_2: 1.39  loss_dice_2: 0.8788  time: 1.6550  data_time: 0.0260  lr: 9.9041e-05  max_mem: 4826M
[02/27 16:48:47] d2.utils.events INFO:  eta: 1 day, 2:55:19  iter: 659  total_loss: 10.42  loss_ce: 0  loss_mask: 1.519  loss_dice: 0.8841  loss_seg: 0.9677  loss_ce_0: 0  loss_mask_0: 1.462  loss_dice_0: 0.8721  loss_ce_1: 0  loss_mask_1: 1.461  loss_dice_1: 0.8667  loss_ce_2: 0  loss_mask_2: 1.466  loss_dice_2: 0.8684  time: 1.6516  data_time: 0.0279  lr: 9.9011e-05  max_mem: 4826M
[02/27 16:49:19] d2.utils.events INFO:  eta: 1 day, 2:52:57  iter: 679  total_loss: 9.926  loss_ce: 0  loss_mask: 1.45  loss_dice: 0.8904  loss_seg: 0.9149  loss_ce_0: 0  loss_mask_0: 1.379  loss_dice_0: 0.8706  loss_ce_1: 0  loss_mask_1: 1.387  loss_dice_1: 0.8673  loss_ce_2: 0  loss_mask_2: 1.387  loss_dice_2: 0.8712  time: 1.6500  data_time: 0.0261  lr: 9.8981e-05  max_mem: 4826M
[02/27 16:49:49] d2.utils.events INFO:  eta: 1 day, 2:48:16  iter: 699  total_loss: 9.826  loss_ce: 0  loss_mask: 1.393  loss_dice: 0.8873  loss_seg: 0.8352  loss_ce_0: 0  loss_mask_0: 1.337  loss_dice_0: 0.8742  loss_ce_1: 0  loss_mask_1: 1.336  loss_dice_1: 0.8696  loss_ce_2: 0  loss_mask_2: 1.34  loss_dice_2: 0.8708  time: 1.6452  data_time: 0.0256  lr: 9.8951e-05  max_mem: 4826M
[02/27 16:50:20] d2.utils.events INFO:  eta: 1 day, 2:46:21  iter: 719  total_loss: 10.05  loss_ce: 0  loss_mask: 1.449  loss_dice: 0.8854  loss_seg: 0.8907  loss_ce_0: 0  loss_mask_0: 1.384  loss_dice_0: 0.8717  loss_ce_1: 0  loss_mask_1: 1.38  loss_dice_1: 0.8699  loss_ce_2: 0  loss_mask_2: 1.379  loss_dice_2: 0.8711  time: 1.6423  data_time: 0.0303  lr: 9.8921e-05  max_mem: 4826M
[02/27 16:50:51] d2.utils.events INFO:  eta: 1 day, 2:43:00  iter: 739  total_loss: 10.05  loss_ce: 0  loss_mask: 1.432  loss_dice: 0.8867  loss_seg: 0.8766  loss_ce_0: 0  loss_mask_0: 1.385  loss_dice_0: 0.8683  loss_ce_1: 0  loss_mask_1: 1.393  loss_dice_1: 0.8633  loss_ce_2: 0  loss_mask_2: 1.395  loss_dice_2: 0.8655  time: 1.6401  data_time: 0.0273  lr: 9.8891e-05  max_mem: 4826M
[02/27 16:51:22] d2.utils.events INFO:  eta: 1 day, 2:39:47  iter: 759  total_loss: 9.876  loss_ce: 0  loss_mask: 1.404  loss_dice: 0.8875  loss_seg: 0.866  loss_ce_0: 0  loss_mask_0: 1.346  loss_dice_0: 0.8712  loss_ce_1: 0  loss_mask_1: 1.367  loss_dice_1: 0.8636  loss_ce_2: 0  loss_mask_2: 1.361  loss_dice_2: 0.8646  time: 1.6371  data_time: 0.0303  lr: 9.8861e-05  max_mem: 4826M
[02/27 16:51:54] d2.utils.events INFO:  eta: 1 day, 2:38:37  iter: 779  total_loss: 9.952  loss_ce: 0  loss_mask: 1.454  loss_dice: 0.8858  loss_seg: 0.8056  loss_ce_0: 0  loss_mask_0: 1.393  loss_dice_0: 0.8701  loss_ce_1: 0  loss_mask_1: 1.395  loss_dice_1: 0.8665  loss_ce_2: 0  loss_mask_2: 1.399  loss_dice_2: 0.8673  time: 1.6362  data_time: 0.0331  lr: 9.8831e-05  max_mem: 4826M
[02/27 16:52:26] d2.utils.events INFO:  eta: 1 day, 2:37:13  iter: 799  total_loss: 9.872  loss_ce: 0  loss_mask: 1.399  loss_dice: 0.8775  loss_seg: 0.8313  loss_ce_0: 0  loss_mask_0: 1.347  loss_dice_0: 0.8659  loss_ce_1: 0  loss_mask_1: 1.351  loss_dice_1: 0.8605  loss_ce_2: 0  loss_mask_2: 1.346  loss_dice_2: 0.8629  time: 1.6351  data_time: 0.0397  lr: 9.8801e-05  max_mem: 4826M
[02/27 16:52:59] d2.utils.events INFO:  eta: 1 day, 2:38:09  iter: 819  total_loss: 9.851  loss_ce: 0  loss_mask: 1.411  loss_dice: 0.88  loss_seg: 0.8969  loss_ce_0: 0  loss_mask_0: 1.359  loss_dice_0: 0.8592  loss_ce_1: 0  loss_mask_1: 1.362  loss_dice_1: 0.8545  loss_ce_2: 0  loss_mask_2: 1.352  loss_dice_2: 0.8569  time: 1.6361  data_time: 0.0391  lr: 9.8771e-05  max_mem: 4826M
[02/27 16:53:33] d2.utils.events INFO:  eta: 1 day, 2:38:15  iter: 839  total_loss: 10.02  loss_ce: 0  loss_mask: 1.49  loss_dice: 0.8767  loss_seg: 0.8107  loss_ce_0: 0  loss_mask_0: 1.418  loss_dice_0: 0.8561  loss_ce_1: 0  loss_mask_1: 1.415  loss_dice_1: 0.8511  loss_ce_2: 0  loss_mask_2: 1.415  loss_dice_2: 0.8522  time: 1.6367  data_time: 0.0549  lr: 9.8741e-05  max_mem: 4826M
[02/27 16:54:08] d2.utils.events INFO:  eta: 1 day, 2:43:39  iter: 859  total_loss: 9.921  loss_ce: 0  loss_mask: 1.493  loss_dice: 0.8685  loss_seg: 0.6981  loss_ce_0: 0  loss_mask_0: 1.416  loss_dice_0: 0.852  loss_ce_1: 0  loss_mask_1: 1.414  loss_dice_1: 0.8452  loss_ce_2: 0  loss_mask_2: 1.408  loss_dice_2: 0.8465  time: 1.6394  data_time: 0.0456  lr: 9.8711e-05  max_mem: 4826M
[02/27 16:54:41] d2.utils.events INFO:  eta: 1 day, 2:43:34  iter: 879  total_loss: 9.833  loss_ce: 0  loss_mask: 1.442  loss_dice: 0.8727  loss_seg: 0.7974  loss_ce_0: 0  loss_mask_0: 1.38  loss_dice_0: 0.8594  loss_ce_1: 0  loss_mask_1: 1.386  loss_dice_1: 0.8533  loss_ce_2: 0  loss_mask_2: 1.385  loss_dice_2: 0.8537  time: 1.6401  data_time: 0.0424  lr: 9.8681e-05  max_mem: 4826M
[02/27 16:55:16] d2.utils.events INFO:  eta: 1 day, 2:46:58  iter: 899  total_loss: 9.899  loss_ce: 0  loss_mask: 1.463  loss_dice: 0.873  loss_seg: 0.8535  loss_ce_0: 0  loss_mask_0: 1.398  loss_dice_0: 0.8549  loss_ce_1: 0  loss_mask_1: 1.393  loss_dice_1: 0.8526  loss_ce_2: 0  loss_mask_2: 1.396  loss_dice_2: 0.8533  time: 1.6417  data_time: 0.0450  lr: 9.865e-05  max_mem: 4826M
[02/27 16:55:49] d2.utils.events INFO:  eta: 1 day, 2:46:47  iter: 919  total_loss: 9.761  loss_ce: 0  loss_mask: 1.448  loss_dice: 0.8692  loss_seg: 0.7695  loss_ce_0: 0  loss_mask_0: 1.389  loss_dice_0: 0.8536  loss_ce_1: 0  loss_mask_1: 1.389  loss_dice_1: 0.8477  loss_ce_2: 0  loss_mask_2: 1.392  loss_dice_2: 0.849  time: 1.6417  data_time: 0.0353  lr: 9.862e-05  max_mem: 4826M
[02/27 16:56:22] d2.utils.events INFO:  eta: 1 day, 2:45:41  iter: 939  total_loss: 9.956  loss_ce: 0  loss_mask: 1.501  loss_dice: 0.8613  loss_seg: 0.7141  loss_ce_0: 0  loss_mask_0: 1.45  loss_dice_0: 0.842  loss_ce_1: 0  loss_mask_1: 1.446  loss_dice_1: 0.8383  loss_ce_2: 0  loss_mask_2: 1.443  loss_dice_2: 0.8389  time: 1.6416  data_time: 0.0380  lr: 9.859e-05  max_mem: 4826M
[02/27 16:56:56] d2.utils.events INFO:  eta: 1 day, 2:45:41  iter: 959  total_loss: 9.908  loss_ce: 0  loss_mask: 1.523  loss_dice: 0.8591  loss_seg: 0.6679  loss_ce_0: 0  loss_mask_0: 1.447  loss_dice_0: 0.8417  loss_ce_1: 0  loss_mask_1: 1.438  loss_dice_1: 0.8367  loss_ce_2: 0  loss_mask_2: 1.437  loss_dice_2: 0.838  time: 1.6432  data_time: 0.0397  lr: 9.856e-05  max_mem: 4826M
[02/27 16:57:30] d2.utils.events INFO:  eta: 1 day, 2:46:24  iter: 979  total_loss: 9.761  loss_ce: 0  loss_mask: 1.46  loss_dice: 0.8674  loss_seg: 0.7027  loss_ce_0: 0  loss_mask_0: 1.388  loss_dice_0: 0.8501  loss_ce_1: 0  loss_mask_1: 1.387  loss_dice_1: 0.8452  loss_ce_2: 0  loss_mask_2: 1.387  loss_dice_2: 0.8477  time: 1.6441  data_time: 0.0483  lr: 9.853e-05  max_mem: 4826M
[02/27 16:58:04] d2.utils.events INFO:  eta: 1 day, 2:47:08  iter: 999  total_loss: 9.818  loss_ce: 0  loss_mask: 1.448  loss_dice: 0.8646  loss_seg: 0.7059  loss_ce_0: 0  loss_mask_0: 1.374  loss_dice_0: 0.8449  loss_ce_1: 0  loss_mask_1: 1.383  loss_dice_1: 0.8389  loss_ce_2: 0  loss_mask_2: 1.385  loss_dice_2: 0.8409  time: 1.6450  data_time: 0.0415  lr: 9.85e-05  max_mem: 4826M
[02/27 16:58:37] d2.utils.events INFO:  eta: 1 day, 2:40:55  iter: 1019  total_loss: 9.679  loss_ce: 0  loss_mask: 1.441  loss_dice: 0.8582  loss_seg: 0.7127  loss_ce_0: 0  loss_mask_0: 1.391  loss_dice_0: 0.8383  loss_ce_1: 0  loss_mask_1: 1.392  loss_dice_1: 0.8358  loss_ce_2: 0  loss_mask_2: 1.385  loss_dice_2: 0.8362  time: 1.6450  data_time: 0.0508  lr: 9.847e-05  max_mem: 4826M
[02/27 16:59:10] d2.utils.events INFO:  eta: 1 day, 2:39:13  iter: 1039  total_loss: 9.763  loss_ce: 0  loss_mask: 1.472  loss_dice: 0.8538  loss_seg: 0.6485  loss_ce_0: 0  loss_mask_0: 1.409  loss_dice_0: 0.8323  loss_ce_1: 0  loss_mask_1: 1.393  loss_dice_1: 0.8258  loss_ce_2: 0  loss_mask_2: 1.393  loss_dice_2: 0.8268  time: 1.6450  data_time: 0.0380  lr: 9.844e-05  max_mem: 4826M
[02/27 16:59:45] d2.utils.events INFO:  eta: 1 day, 2:39:04  iter: 1059  total_loss: 9.733  loss_ce: 0  loss_mask: 1.5  loss_dice: 0.8546  loss_seg: 0.6688  loss_ce_0: 0  loss_mask_0: 1.43  loss_dice_0: 0.8328  loss_ce_1: 0  loss_mask_1: 1.43  loss_dice_1: 0.8279  loss_ce_2: 0  loss_mask_2: 1.43  loss_dice_2: 0.8281  time: 1.6468  data_time: 0.0422  lr: 9.841e-05  max_mem: 4826M
[02/27 17:00:19] d2.utils.events INFO:  eta: 1 day, 2:37:58  iter: 1079  total_loss: 9.675  loss_ce: 0  loss_mask: 1.472  loss_dice: 0.8562  loss_seg: 0.6694  loss_ce_0: 0  loss_mask_0: 1.396  loss_dice_0: 0.8333  loss_ce_1: 0  loss_mask_1: 1.4  loss_dice_1: 0.826  loss_ce_2: 0  loss_mask_2: 1.405  loss_dice_2: 0.8272  time: 1.6474  data_time: 0.0430  lr: 9.838e-05  max_mem: 4826M
[02/27 17:00:51] d2.utils.events INFO:  eta: 1 day, 2:36:03  iter: 1099  total_loss: 9.67  loss_ce: 0  loss_mask: 1.48  loss_dice: 0.8524  loss_seg: 0.6533  loss_ce_0: 0  loss_mask_0: 1.391  loss_dice_0: 0.8273  loss_ce_1: 0  loss_mask_1: 1.388  loss_dice_1: 0.8231  loss_ce_2: 0  loss_mask_2: 1.388  loss_dice_2: 0.8238  time: 1.6471  data_time: 0.0386  lr: 9.835e-05  max_mem: 4826M
[02/27 17:01:25] d2.utils.events INFO:  eta: 1 day, 2:34:39  iter: 1119  total_loss: 9.61  loss_ce: 0  loss_mask: 1.441  loss_dice: 0.8566  loss_seg: 0.6852  loss_ce_0: 0  loss_mask_0: 1.372  loss_dice_0: 0.8344  loss_ce_1: 0  loss_mask_1: 1.369  loss_dice_1: 0.8302  loss_ce_2: 0  loss_mask_2: 1.375  loss_dice_2: 0.8319  time: 1.6473  data_time: 0.0478  lr: 9.832e-05  max_mem: 4826M
[02/27 17:02:00] d2.utils.events INFO:  eta: 1 day, 2:30:53  iter: 1139  total_loss: 9.823  loss_ce: 0  loss_mask: 1.464  loss_dice: 0.8515  loss_seg: 0.7134  loss_ce_0: 0  loss_mask_0: 1.416  loss_dice_0: 0.8316  loss_ce_1: 0  loss_mask_1: 1.414  loss_dice_1: 0.8275  loss_ce_2: 0  loss_mask_2: 1.408  loss_dice_2: 0.8274  time: 1.6492  data_time: 0.0504  lr: 9.829e-05  max_mem: 4826M
[02/27 17:02:34] d2.utils.events INFO:  eta: 1 day, 2:27:44  iter: 1159  total_loss: 9.587  loss_ce: 0  loss_mask: 1.454  loss_dice: 0.8473  loss_seg: 0.63  loss_ce_0: 0  loss_mask_0: 1.4  loss_dice_0: 0.8309  loss_ce_1: 0  loss_mask_1: 1.392  loss_dice_1: 0.8249  loss_ce_2: 0  loss_mask_2: 1.386  loss_dice_2: 0.8261  time: 1.6501  data_time: 0.0469  lr: 9.826e-05  max_mem: 4826M
[02/27 17:03:08] d2.utils.events INFO:  eta: 1 day, 2:26:37  iter: 1179  total_loss: 9.607  loss_ce: 0  loss_mask: 1.524  loss_dice: 0.84  loss_seg: 0.5526  loss_ce_0: 0  loss_mask_0: 1.417  loss_dice_0: 0.8162  loss_ce_1: 0  loss_mask_1: 1.412  loss_dice_1: 0.8097  loss_ce_2: 0  loss_mask_2: 1.414  loss_dice_2: 0.8115  time: 1.6506  data_time: 0.0433  lr: 9.823e-05  max_mem: 4826M
[02/27 17:03:42] d2.utils.events INFO:  eta: 1 day, 2:26:04  iter: 1199  total_loss: 9.515  loss_ce: 0  loss_mask: 1.458  loss_dice: 0.8458  loss_seg: 0.5926  loss_ce_0: 0  loss_mask_0: 1.362  loss_dice_0: 0.8198  loss_ce_1: 0  loss_mask_1: 1.36  loss_dice_1: 0.8109  loss_ce_2: 0  loss_mask_2: 1.363  loss_dice_2: 0.812  time: 1.6516  data_time: 0.0475  lr: 9.82e-05  max_mem: 4826M
[02/27 17:04:17] d2.utils.events INFO:  eta: 1 day, 2:32:48  iter: 1219  total_loss: 9.497  loss_ce: 0  loss_mask: 1.43  loss_dice: 0.8422  loss_seg: 0.6155  loss_ce_0: 0  loss_mask_0: 1.335  loss_dice_0: 0.8159  loss_ce_1: 0  loss_mask_1: 1.337  loss_dice_1: 0.8105  loss_ce_2: 0  loss_mask_2: 1.338  loss_dice_2: 0.812  time: 1.6530  data_time: 0.0369  lr: 9.817e-05  max_mem: 4826M
[02/27 17:04:50] d2.utils.events INFO:  eta: 1 day, 2:34:00  iter: 1239  total_loss: 9.535  loss_ce: 0  loss_mask: 1.481  loss_dice: 0.8446  loss_seg: 0.6388  loss_ce_0: 0  loss_mask_0: 1.389  loss_dice_0: 0.8146  loss_ce_1: 0  loss_mask_1: 1.395  loss_dice_1: 0.8011  loss_ce_2: 0  loss_mask_2: 1.398  loss_dice_2: 0.802  time: 1.6530  data_time: 0.0389  lr: 9.814e-05  max_mem: 4826M
[02/27 17:05:25] d2.utils.events INFO:  eta: 1 day, 2:32:20  iter: 1259  total_loss: 9.626  loss_ce: 0  loss_mask: 1.535  loss_dice: 0.8332  loss_seg: 0.6016  loss_ce_0: 0  loss_mask_0: 1.423  loss_dice_0: 0.8077  loss_ce_1: 0  loss_mask_1: 1.415  loss_dice_1: 0.8012  loss_ce_2: 0  loss_mask_2: 1.422  loss_dice_2: 0.8001  time: 1.6543  data_time: 0.0487  lr: 9.811e-05  max_mem: 4826M
[02/27 17:06:00] d2.utils.events INFO:  eta: 1 day, 2:33:16  iter: 1279  total_loss: 9.501  loss_ce: 0  loss_mask: 1.449  loss_dice: 0.8384  loss_seg: 0.6452  loss_ce_0: 0  loss_mask_0: 1.365  loss_dice_0: 0.8137  loss_ce_1: 0  loss_mask_1: 1.366  loss_dice_1: 0.8063  loss_ce_2: 0  loss_mask_2: 1.365  loss_dice_2: 0.8064  time: 1.6559  data_time: 0.0483  lr: 9.8079e-05  max_mem: 4826M
[02/27 17:06:34] d2.utils.events INFO:  eta: 1 day, 2:34:51  iter: 1299  total_loss: 9.49  loss_ce: 0  loss_mask: 1.498  loss_dice: 0.8321  loss_seg: 0.5638  loss_ce_0: 0  loss_mask_0: 1.393  loss_dice_0: 0.8033  loss_ce_1: 0  loss_mask_1: 1.389  loss_dice_1: 0.795  loss_ce_2: 0  loss_mask_2: 1.379  loss_dice_2: 0.7956  time: 1.6568  data_time: 0.0408  lr: 9.8049e-05  max_mem: 4826M
[02/27 17:07:08] d2.utils.events INFO:  eta: 1 day, 2:36:22  iter: 1319  total_loss: 9.415  loss_ce: 0  loss_mask: 1.462  loss_dice: 0.8336  loss_seg: 0.6206  loss_ce_0: 0  loss_mask_0: 1.361  loss_dice_0: 0.8119  loss_ce_1: 0  loss_mask_1: 1.352  loss_dice_1: 0.8015  loss_ce_2: 0  loss_mask_2: 1.348  loss_dice_2: 0.803  time: 1.6569  data_time: 0.0362  lr: 9.8019e-05  max_mem: 4826M
[02/27 17:07:37] d2.utils.events INFO:  eta: 1 day, 2:29:33  iter: 1339  total_loss: 9.278  loss_ce: 0  loss_mask: 1.441  loss_dice: 0.8313  loss_seg: 0.5489  loss_ce_0: 0  loss_mask_0: 1.339  loss_dice_0: 0.806  loss_ce_1: 0  loss_mask_1: 1.32  loss_dice_1: 0.7971  loss_ce_2: 0  loss_mask_2: 1.324  loss_dice_2: 0.7962  time: 1.6542  data_time: 0.0282  lr: 9.7989e-05  max_mem: 4826M
[02/27 17:08:07] d2.utils.events INFO:  eta: 1 day, 2:22:11  iter: 1359  total_loss: 9.402  loss_ce: 0  loss_mask: 1.449  loss_dice: 0.8306  loss_seg: 0.5501  loss_ce_0: 0  loss_mask_0: 1.369  loss_dice_0: 0.8107  loss_ce_1: 0  loss_mask_1: 1.364  loss_dice_1: 0.7977  loss_ce_2: 0  loss_mask_2: 1.357  loss_dice_2: 0.7965  time: 1.6512  data_time: 0.0206  lr: 9.7959e-05  max_mem: 4826M
[02/27 17:08:37] d2.utils.events INFO:  eta: 1 day, 2:19:07  iter: 1379  total_loss: 9.269  loss_ce: 0  loss_mask: 1.479  loss_dice: 0.8222  loss_seg: 0.5199  loss_ce_0: 0  loss_mask_0: 1.374  loss_dice_0: 0.7899  loss_ce_1: 0  loss_mask_1: 1.364  loss_dice_1: 0.7818  loss_ce_2: 0  loss_mask_2: 1.361  loss_dice_2: 0.7823  time: 1.6490  data_time: 0.0250  lr: 9.7929e-05  max_mem: 4826M
[02/27 17:09:07] d2.utils.events INFO:  eta: 1 day, 2:15:06  iter: 1399  total_loss: 9.355  loss_ce: 0  loss_mask: 1.456  loss_dice: 0.8342  loss_seg: 0.5598  loss_ce_0: 0  loss_mask_0: 1.341  loss_dice_0: 0.808  loss_ce_1: 0  loss_mask_1: 1.342  loss_dice_1: 0.7974  loss_ce_2: 0  loss_mask_2: 1.331  loss_dice_2: 0.7979  time: 1.6466  data_time: 0.0307  lr: 9.7899e-05  max_mem: 4826M
[02/27 17:09:37] d2.utils.events INFO:  eta: 1 day, 2:13:35  iter: 1419  total_loss: 9.322  loss_ce: 0  loss_mask: 1.506  loss_dice: 0.8307  loss_seg: 0.5449  loss_ce_0: 0  loss_mask_0: 1.395  loss_dice_0: 0.7985  loss_ce_1: 0  loss_mask_1: 1.386  loss_dice_1: 0.7954  loss_ce_2: 0  loss_mask_2: 1.383  loss_dice_2: 0.7979  time: 1.6451  data_time: 0.0249  lr: 9.7869e-05  max_mem: 4826M
[02/27 17:10:08] d2.utils.events INFO:  eta: 1 day, 2:08:57  iter: 1439  total_loss: 9.439  loss_ce: 0  loss_mask: 1.506  loss_dice: 0.8293  loss_seg: 0.5594  loss_ce_0: 0  loss_mask_0: 1.386  loss_dice_0: 0.7935  loss_ce_1: 0  loss_mask_1: 1.385  loss_dice_1: 0.7885  loss_ce_2: 0  loss_mask_2: 1.383  loss_dice_2: 0.7897  time: 1.6431  data_time: 0.0242  lr: 9.7839e-05  max_mem: 4826M
[02/27 17:10:39] d2.utils.events INFO:  eta: 1 day, 2:06:38  iter: 1459  total_loss: 9.196  loss_ce: 0  loss_mask: 1.509  loss_dice: 0.8289  loss_seg: 0.523  loss_ce_0: 0  loss_mask_0: 1.349  loss_dice_0: 0.7944  loss_ce_1: 0  loss_mask_1: 1.346  loss_dice_1: 0.7882  loss_ce_2: 0  loss_mask_2: 1.346  loss_dice_2: 0.7897  time: 1.6423  data_time: 0.0320  lr: 9.7809e-05  max_mem: 4826M
[02/27 17:11:09] d2.utils.events INFO:  eta: 1 day, 2:04:07  iter: 1479  total_loss: 9.05  loss_ce: 0  loss_mask: 1.491  loss_dice: 0.8171  loss_seg: 0.4885  loss_ce_0: 0  loss_mask_0: 1.328  loss_dice_0: 0.7805  loss_ce_1: 0  loss_mask_1: 1.317  loss_dice_1: 0.7748  loss_ce_2: 0  loss_mask_2: 1.315  loss_dice_2: 0.7742  time: 1.6399  data_time: 0.0247  lr: 9.7779e-05  max_mem: 4826M
[02/27 17:11:39] d2.utils.events INFO:  eta: 1 day, 2:02:26  iter: 1499  total_loss: 9.135  loss_ce: 0  loss_mask: 1.435  loss_dice: 0.8277  loss_seg: 0.5496  loss_ce_0: 0  loss_mask_0: 1.304  loss_dice_0: 0.7934  loss_ce_1: 0  loss_mask_1: 1.296  loss_dice_1: 0.7856  loss_ce_2: 0  loss_mask_2: 1.295  loss_dice_2: 0.7883  time: 1.6383  data_time: 0.0256  lr: 9.7749e-05  max_mem: 4826M
[02/27 17:12:09] d2.utils.events INFO:  eta: 1 day, 2:01:54  iter: 1519  total_loss: 9.191  loss_ce: 0  loss_mask: 1.439  loss_dice: 0.8227  loss_seg: 0.4798  loss_ce_0: 0  loss_mask_0: 1.346  loss_dice_0: 0.7908  loss_ce_1: 0  loss_mask_1: 1.336  loss_dice_1: 0.7819  loss_ce_2: 0  loss_mask_2: 1.342  loss_dice_2: 0.7823  time: 1.6364  data_time: 0.0271  lr: 9.7719e-05  max_mem: 4826M
[02/27 17:12:39] d2.utils.events INFO:  eta: 1 day, 2:01:38  iter: 1539  total_loss: 9.012  loss_ce: 0  loss_mask: 1.439  loss_dice: 0.819  loss_seg: 0.5058  loss_ce_0: 0  loss_mask_0: 1.309  loss_dice_0: 0.7799  loss_ce_1: 0  loss_mask_1: 1.307  loss_dice_1: 0.7717  loss_ce_2: 0  loss_mask_2: 1.307  loss_dice_2: 0.7723  time: 1.6348  data_time: 0.0303  lr: 9.7689e-05  max_mem: 4826M
[02/27 17:13:11] d2.utils.events INFO:  eta: 1 day, 2:01:59  iter: 1559  total_loss: 9.164  loss_ce: 0  loss_mask: 1.497  loss_dice: 0.8214  loss_seg: 0.4828  loss_ce_0: 0  loss_mask_0: 1.356  loss_dice_0: 0.7878  loss_ce_1: 0  loss_mask_1: 1.336  loss_dice_1: 0.7796  loss_ce_2: 0  loss_mask_2: 1.332  loss_dice_2: 0.7813  time: 1.6337  data_time: 0.0277  lr: 9.7658e-05  max_mem: 4826M
[02/27 17:13:41] d2.utils.events INFO:  eta: 1 day, 2:02:15  iter: 1579  total_loss: 9.064  loss_ce: 0  loss_mask: 1.483  loss_dice: 0.8128  loss_seg: 0.5129  loss_ce_0: 0  loss_mask_0: 1.342  loss_dice_0: 0.7796  loss_ce_1: 0  loss_mask_1: 1.343  loss_dice_1: 0.7695  loss_ce_2: 0  loss_mask_2: 1.342  loss_dice_2: 0.7693  time: 1.6322  data_time: 0.0250  lr: 9.7628e-05  max_mem: 4826M
[02/27 17:14:13] d2.utils.events INFO:  eta: 1 day, 2:02:13  iter: 1599  total_loss: 8.95  loss_ce: 0  loss_mask: 1.442  loss_dice: 0.8212  loss_seg: 0.5228  loss_ce_0: 0  loss_mask_0: 1.288  loss_dice_0: 0.7837  loss_ce_1: 0  loss_mask_1: 1.284  loss_dice_1: 0.7728  loss_ce_2: 0  loss_mask_2: 1.275  loss_dice_2: 0.7741  time: 1.6318  data_time: 0.0415  lr: 9.7598e-05  max_mem: 4826M
[02/27 17:14:46] d2.utils.events INFO:  eta: 1 day, 2:02:21  iter: 1619  total_loss: 9.103  loss_ce: 0  loss_mask: 1.444  loss_dice: 0.8147  loss_seg: 0.4755  loss_ce_0: 0  loss_mask_0: 1.312  loss_dice_0: 0.7782  loss_ce_1: 0  loss_mask_1: 1.314  loss_dice_1: 0.7737  loss_ce_2: 0  loss_mask_2: 1.315  loss_dice_2: 0.7738  time: 1.6322  data_time: 0.0382  lr: 9.7568e-05  max_mem: 4826M
[02/27 17:15:20] d2.utils.events INFO:  eta: 1 day, 2:02:46  iter: 1639  total_loss: 9.11  loss_ce: 0  loss_mask: 1.483  loss_dice: 0.8139  loss_seg: 0.4876  loss_ce_0: 0  loss_mask_0: 1.363  loss_dice_0: 0.7741  loss_ce_1: 0  loss_mask_1: 1.344  loss_dice_1: 0.7652  loss_ce_2: 0  loss_mask_2: 1.346  loss_dice_2: 0.766  time: 1.6326  data_time: 0.0431  lr: 9.7538e-05  max_mem: 4826M
[02/27 17:15:52] d2.utils.events INFO:  eta: 1 day, 2:03:56  iter: 1659  total_loss: 9.162  loss_ce: 0  loss_mask: 1.457  loss_dice: 0.816  loss_seg: 0.5155  loss_ce_0: 0  loss_mask_0: 1.333  loss_dice_0: 0.7849  loss_ce_1: 0  loss_mask_1: 1.327  loss_dice_1: 0.7737  loss_ce_2: 0  loss_mask_2: 1.33  loss_dice_2: 0.7726  time: 1.6324  data_time: 0.0353  lr: 9.7508e-05  max_mem: 4826M
[02/27 17:16:26] d2.utils.events INFO:  eta: 1 day, 2:07:34  iter: 1679  total_loss: 9.046  loss_ce: 0  loss_mask: 1.443  loss_dice: 0.8174  loss_seg: 0.5179  loss_ce_0: 0  loss_mask_0: 1.313  loss_dice_0: 0.7833  loss_ce_1: 0  loss_mask_1: 1.312  loss_dice_1: 0.7757  loss_ce_2: 0  loss_mask_2: 1.314  loss_dice_2: 0.7773  time: 1.6327  data_time: 0.0460  lr: 9.7478e-05  max_mem: 4826M
[02/27 17:17:00] d2.utils.events INFO:  eta: 1 day, 2:11:30  iter: 1699  total_loss: 9.018  loss_ce: 0  loss_mask: 1.442  loss_dice: 0.8156  loss_seg: 0.4967  loss_ce_0: 0  loss_mask_0: 1.298  loss_dice_0: 0.774  loss_ce_1: 0  loss_mask_1: 1.286  loss_dice_1: 0.7649  loss_ce_2: 0  loss_mask_2: 1.291  loss_dice_2: 0.7653  time: 1.6335  data_time: 0.0461  lr: 9.7448e-05  max_mem: 4826M
[02/27 17:17:32] d2.utils.events INFO:  eta: 1 day, 2:10:12  iter: 1719  total_loss: 9.117  loss_ce: 0  loss_mask: 1.475  loss_dice: 0.8094  loss_seg: 0.5116  loss_ce_0: 0  loss_mask_0: 1.33  loss_dice_0: 0.7675  loss_ce_1: 0  loss_mask_1: 1.329  loss_dice_1: 0.7611  loss_ce_2: 0  loss_mask_2: 1.326  loss_dice_2: 0.761  time: 1.6332  data_time: 0.0363  lr: 9.7418e-05  max_mem: 4826M
[02/27 17:18:06] d2.utils.events INFO:  eta: 1 day, 2:11:56  iter: 1739  total_loss: 8.854  loss_ce: 0  loss_mask: 1.443  loss_dice: 0.8092  loss_seg: 0.4964  loss_ce_0: 0  loss_mask_0: 1.298  loss_dice_0: 0.7692  loss_ce_1: 0  loss_mask_1: 1.286  loss_dice_1: 0.7584  loss_ce_2: 0  loss_mask_2: 1.285  loss_dice_2: 0.7603  time: 1.6340  data_time: 0.0514  lr: 9.7388e-05  max_mem: 4826M
[02/27 17:18:38] d2.utils.events INFO:  eta: 1 day, 2:16:24  iter: 1759  total_loss: 8.727  loss_ce: 0  loss_mask: 1.407  loss_dice: 0.8083  loss_seg: 0.4416  loss_ce_0: 0  loss_mask_0: 1.263  loss_dice_0: 0.7623  loss_ce_1: 0  loss_mask_1: 1.241  loss_dice_1: 0.7567  loss_ce_2: 0  loss_mask_2: 1.24  loss_dice_2: 0.7591  time: 1.6337  data_time: 0.0374  lr: 9.7358e-05  max_mem: 4826M
[02/27 17:19:13] d2.utils.events INFO:  eta: 1 day, 2:19:18  iter: 1779  total_loss: 8.942  loss_ce: 0  loss_mask: 1.461  loss_dice: 0.8051  loss_seg: 0.476  loss_ce_0: 0  loss_mask_0: 1.318  loss_dice_0: 0.764  loss_ce_1: 0  loss_mask_1: 1.312  loss_dice_1: 0.7526  loss_ce_2: 0  loss_mask_2: 1.315  loss_dice_2: 0.7526  time: 1.6348  data_time: 0.0344  lr: 9.7328e-05  max_mem: 4826M
[02/27 17:19:45] d2.utils.events INFO:  eta: 1 day, 2:18:45  iter: 1799  total_loss: 8.767  loss_ce: 0  loss_mask: 1.37  loss_dice: 0.8133  loss_seg: 0.5166  loss_ce_0: 0  loss_mask_0: 1.251  loss_dice_0: 0.773  loss_ce_1: 0  loss_mask_1: 1.236  loss_dice_1: 0.7648  loss_ce_2: 0  loss_mask_2: 1.235  loss_dice_2: 0.7658  time: 1.6344  data_time: 0.0355  lr: 9.7297e-05  max_mem: 4826M
[02/27 17:20:24] d2.utils.events INFO:  eta: 1 day, 2:18:44  iter: 1819  total_loss: 9.009  loss_ce: 0  loss_mask: 1.472  loss_dice: 0.8038  loss_seg: 0.4384  loss_ce_0: 0  loss_mask_0: 1.342  loss_dice_0: 0.7628  loss_ce_1: 0  loss_mask_1: 1.338  loss_dice_1: 0.7556  loss_ce_2: 0  loss_mask_2: 1.335  loss_dice_2: 0.7565  time: 1.6380  data_time: 0.0532  lr: 9.7267e-05  max_mem: 4826M
[02/27 17:20:57] d2.utils.events INFO:  eta: 1 day, 2:17:21  iter: 1839  total_loss: 8.811  loss_ce: 0  loss_mask: 1.445  loss_dice: 0.8026  loss_seg: 0.4758  loss_ce_0: 0  loss_mask_0: 1.31  loss_dice_0: 0.7601  loss_ce_1: 0  loss_mask_1: 1.303  loss_dice_1: 0.7558  loss_ce_2: 0  loss_mask_2: 1.304  loss_dice_2: 0.7562  time: 1.6379  data_time: 0.0405  lr: 9.7237e-05  max_mem: 4826M
[02/27 17:21:30] d2.utils.events INFO:  eta: 1 day, 2:08:45  iter: 1859  total_loss: 8.925  loss_ce: 0  loss_mask: 1.463  loss_dice: 0.8018  loss_seg: 0.4556  loss_ce_0: 0  loss_mask_0: 1.335  loss_dice_0: 0.7593  loss_ce_1: 0  loss_mask_1: 1.332  loss_dice_1: 0.7523  loss_ce_2: 0  loss_mask_2: 1.334  loss_dice_2: 0.7545  time: 1.6380  data_time: 0.0462  lr: 9.7207e-05  max_mem: 4826M
[02/27 17:22:04] d2.utils.events INFO:  eta: 1 day, 2:07:14  iter: 1879  total_loss: 8.952  loss_ce: 0  loss_mask: 1.456  loss_dice: 0.8012  loss_seg: 0.442  loss_ce_0: 0  loss_mask_0: 1.313  loss_dice_0: 0.7518  loss_ce_1: 0  loss_mask_1: 1.314  loss_dice_1: 0.7432  loss_ce_2: 0  loss_mask_2: 1.308  loss_dice_2: 0.7438  time: 1.6384  data_time: 0.0472  lr: 9.7177e-05  max_mem: 4826M
[02/27 17:22:38] d2.utils.events INFO:  eta: 1 day, 2:04:37  iter: 1899  total_loss: 8.81  loss_ce: 0  loss_mask: 1.428  loss_dice: 0.8016  loss_seg: 0.4615  loss_ce_0: 0  loss_mask_0: 1.256  loss_dice_0: 0.7566  loss_ce_1: 0  loss_mask_1: 1.243  loss_dice_1: 0.7498  loss_ce_2: 0  loss_mask_2: 1.241  loss_dice_2: 0.7489  time: 1.6390  data_time: 0.0382  lr: 9.7147e-05  max_mem: 4826M
[02/27 17:23:11] d2.utils.events INFO:  eta: 1 day, 2:04:34  iter: 1919  total_loss: 8.745  loss_ce: 0  loss_mask: 1.449  loss_dice: 0.7968  loss_seg: 0.4682  loss_ce_0: 0  loss_mask_0: 1.282  loss_dice_0: 0.7453  loss_ce_1: 0  loss_mask_1: 1.285  loss_dice_1: 0.7353  loss_ce_2: 0  loss_mask_2: 1.285  loss_dice_2: 0.7355  time: 1.6394  data_time: 0.0449  lr: 9.7117e-05  max_mem: 4826M
[02/27 17:23:45] d2.utils.events INFO:  eta: 1 day, 2:05:37  iter: 1939  total_loss: 8.825  loss_ce: 0  loss_mask: 1.462  loss_dice: 0.793  loss_seg: 0.4427  loss_ce_0: 0  loss_mask_0: 1.306  loss_dice_0: 0.7497  loss_ce_1: 0  loss_mask_1: 1.305  loss_dice_1: 0.7443  loss_ce_2: 0  loss_mask_2: 1.303  loss_dice_2: 0.7458  time: 1.6397  data_time: 0.0391  lr: 9.7087e-05  max_mem: 4826M
[02/27 17:24:19] d2.utils.events INFO:  eta: 1 day, 2:04:13  iter: 1959  total_loss: 8.782  loss_ce: 0  loss_mask: 1.438  loss_dice: 0.8063  loss_seg: 0.4388  loss_ce_0: 0  loss_mask_0: 1.293  loss_dice_0: 0.7546  loss_ce_1: 0  loss_mask_1: 1.283  loss_dice_1: 0.7469  loss_ce_2: 0  loss_mask_2: 1.28  loss_dice_2: 0.7484  time: 1.6401  data_time: 0.0354  lr: 9.7057e-05  max_mem: 4826M
[02/27 17:24:52] d2.utils.events INFO:  eta: 1 day, 2:02:28  iter: 1979  total_loss: 8.65  loss_ce: 0  loss_mask: 1.46  loss_dice: 0.8006  loss_seg: 0.4687  loss_ce_0: 0  loss_mask_0: 1.272  loss_dice_0: 0.7549  loss_ce_1: 0  loss_mask_1: 1.269  loss_dice_1: 0.7482  loss_ce_2: 0  loss_mask_2: 1.263  loss_dice_2: 0.7471  time: 1.6403  data_time: 0.0370  lr: 9.7027e-05  max_mem: 4826M
[02/27 17:25:25] d2.utils.events INFO:  eta: 1 day, 2:00:22  iter: 1999  total_loss: 8.742  loss_ce: 0  loss_mask: 1.392  loss_dice: 0.8014  loss_seg: 0.4409  loss_ce_0: 0  loss_mask_0: 1.274  loss_dice_0: 0.757  loss_ce_1: 0  loss_mask_1: 1.265  loss_dice_1: 0.7485  loss_ce_2: 0  loss_mask_2: 1.261  loss_dice_2: 0.7498  time: 1.6402  data_time: 0.0367  lr: 9.6996e-05  max_mem: 4826M
[02/27 17:25:59] d2.utils.events INFO:  eta: 1 day, 2:00:09  iter: 2019  total_loss: 8.481  loss_ce: 0  loss_mask: 1.404  loss_dice: 0.7885  loss_seg: 0.4143  loss_ce_0: 0  loss_mask_0: 1.22  loss_dice_0: 0.7378  loss_ce_1: 0  loss_mask_1: 1.208  loss_dice_1: 0.7288  loss_ce_2: 0  loss_mask_2: 1.211  loss_dice_2: 0.7322  time: 1.6409  data_time: 0.0428  lr: 9.6966e-05  max_mem: 4826M
[02/27 17:26:32] d2.utils.events INFO:  eta: 1 day, 1:59:36  iter: 2039  total_loss: 8.481  loss_ce: 0  loss_mask: 1.36  loss_dice: 0.8029  loss_seg: 0.451  loss_ce_0: 0  loss_mask_0: 1.197  loss_dice_0: 0.7629  loss_ce_1: 0  loss_mask_1: 1.187  loss_dice_1: 0.7528  loss_ce_2: 0  loss_mask_2: 1.188  loss_dice_2: 0.7519  time: 1.6411  data_time: 0.0386  lr: 9.6936e-05  max_mem: 4826M
[02/27 17:27:07] d2.utils.events INFO:  eta: 1 day, 1:58:30  iter: 2059  total_loss: 8.794  loss_ce: 0  loss_mask: 1.491  loss_dice: 0.7879  loss_seg: 0.3928  loss_ce_0: 0  loss_mask_0: 1.266  loss_dice_0: 0.7293  loss_ce_1: 0  loss_mask_1: 1.254  loss_dice_1: 0.7188  loss_ce_2: 0  loss_mask_2: 1.253  loss_dice_2: 0.7213  time: 1.6419  data_time: 0.0405  lr: 9.6906e-05  max_mem: 4826M
[02/27 17:27:40] d2.utils.events INFO:  eta: 1 day, 1:56:46  iter: 2079  total_loss: 8.635  loss_ce: 0  loss_mask: 1.407  loss_dice: 0.797  loss_seg: 0.4814  loss_ce_0: 0  loss_mask_0: 1.263  loss_dice_0: 0.7508  loss_ce_1: 0  loss_mask_1: 1.252  loss_dice_1: 0.7444  loss_ce_2: 0  loss_mask_2: 1.252  loss_dice_2: 0.7431  time: 1.6421  data_time: 0.0348  lr: 9.6876e-05  max_mem: 4826M
[02/27 17:28:14] d2.utils.events INFO:  eta: 1 day, 1:57:52  iter: 2099  total_loss: 8.733  loss_ce: 0  loss_mask: 1.453  loss_dice: 0.7931  loss_seg: 0.4806  loss_ce_0: 0  loss_mask_0: 1.267  loss_dice_0: 0.7427  loss_ce_1: 0  loss_mask_1: 1.262  loss_dice_1: 0.7367  loss_ce_2: 0  loss_mask_2: 1.265  loss_dice_2: 0.7386  time: 1.6423  data_time: 0.0409  lr: 9.6846e-05  max_mem: 4826M
[02/27 17:28:46] d2.utils.events INFO:  eta: 1 day, 1:56:25  iter: 2119  total_loss: 8.797  loss_ce: 0  loss_mask: 1.445  loss_dice: 0.7876  loss_seg: 0.4196  loss_ce_0: 0  loss_mask_0: 1.302  loss_dice_0: 0.7349  loss_ce_1: 0  loss_mask_1: 1.297  loss_dice_1: 0.7261  loss_ce_2: 0  loss_mask_2: 1.294  loss_dice_2: 0.7274  time: 1.6421  data_time: 0.0448  lr: 9.6816e-05  max_mem: 4826M
[02/27 17:29:19] d2.utils.events INFO:  eta: 1 day, 1:55:52  iter: 2139  total_loss: 8.493  loss_ce: 0  loss_mask: 1.402  loss_dice: 0.7914  loss_seg: 0.4025  loss_ce_0: 0  loss_mask_0: 1.237  loss_dice_0: 0.7424  loss_ce_1: 0  loss_mask_1: 1.225  loss_dice_1: 0.7321  loss_ce_2: 0  loss_mask_2: 1.223  loss_dice_2: 0.7333  time: 1.6422  data_time: 0.0417  lr: 9.6786e-05  max_mem: 4826M
[02/27 17:29:50] d2.utils.events INFO:  eta: 1 day, 1:54:07  iter: 2159  total_loss: 8.56  loss_ce: 0  loss_mask: 1.445  loss_dice: 0.7852  loss_seg: 0.4051  loss_ce_0: 0  loss_mask_0: 1.276  loss_dice_0: 0.7309  loss_ce_1: 0  loss_mask_1: 1.268  loss_dice_1: 0.7188  loss_ce_2: 0  loss_mask_2: 1.259  loss_dice_2: 0.7176  time: 1.6412  data_time: 0.0302  lr: 9.6756e-05  max_mem: 4826M
[02/27 17:30:19] d2.utils.events INFO:  eta: 1 day, 1:51:08  iter: 2179  total_loss: 8.714  loss_ce: 0  loss_mask: 1.434  loss_dice: 0.7921  loss_seg: 0.4215  loss_ce_0: 0  loss_mask_0: 1.267  loss_dice_0: 0.7421  loss_ce_1: 0  loss_mask_1: 1.265  loss_dice_1: 0.7321  loss_ce_2: 0  loss_mask_2: 1.267  loss_dice_2: 0.7306  time: 1.6397  data_time: 0.0248  lr: 9.6725e-05  max_mem: 4826M
[02/27 17:30:49] d2.utils.events INFO:  eta: 1 day, 1:45:40  iter: 2199  total_loss: 8.608  loss_ce: 0  loss_mask: 1.448  loss_dice: 0.7899  loss_seg: 0.4586  loss_ce_0: 0  loss_mask_0: 1.243  loss_dice_0: 0.7322  loss_ce_1: 0  loss_mask_1: 1.225  loss_dice_1: 0.7204  loss_ce_2: 0  loss_mask_2: 1.23  loss_dice_2: 0.7194  time: 1.6382  data_time: 0.0281  lr: 9.6695e-05  max_mem: 4826M
[02/27 17:31:19] d2.utils.events INFO:  eta: 1 day, 1:38:29  iter: 2219  total_loss: 8.392  loss_ce: 0  loss_mask: 1.387  loss_dice: 0.7874  loss_seg: 0.4106  loss_ce_0: 0  loss_mask_0: 1.197  loss_dice_0: 0.7294  loss_ce_1: 0  loss_mask_1: 1.197  loss_dice_1: 0.7197  loss_ce_2: 0  loss_mask_2: 1.196  loss_dice_2: 0.7205  time: 1.6369  data_time: 0.0277  lr: 9.6665e-05  max_mem: 4826M
[02/27 17:31:50] d2.utils.events INFO:  eta: 1 day, 1:37:11  iter: 2239  total_loss: 8.718  loss_ce: 0  loss_mask: 1.442  loss_dice: 0.7932  loss_seg: 0.423  loss_ce_0: 0  loss_mask_0: 1.265  loss_dice_0: 0.7354  loss_ce_1: 0  loss_mask_1: 1.26  loss_dice_1: 0.7265  loss_ce_2: 0  loss_mask_2: 1.262  loss_dice_2: 0.7258  time: 1.6362  data_time: 0.0293  lr: 9.6635e-05  max_mem: 4826M
[02/27 17:32:22] d2.utils.events INFO:  eta: 1 day, 1:32:33  iter: 2259  total_loss: 8.435  loss_ce: 0  loss_mask: 1.403  loss_dice: 0.785  loss_seg: 0.3855  loss_ce_0: 0  loss_mask_0: 1.193  loss_dice_0: 0.7288  loss_ce_1: 0  loss_mask_1: 1.185  loss_dice_1: 0.7209  loss_ce_2: 0  loss_mask_2: 1.181  loss_dice_2: 0.7219  time: 1.6359  data_time: 0.0264  lr: 9.6605e-05  max_mem: 4826M
[02/27 17:32:52] d2.utils.events INFO:  eta: 1 day, 1:27:16  iter: 2279  total_loss: 8.44  loss_ce: 0  loss_mask: 1.362  loss_dice: 0.7842  loss_seg: 0.4194  loss_ce_0: 0  loss_mask_0: 1.189  loss_dice_0: 0.7267  loss_ce_1: 0  loss_mask_1: 1.192  loss_dice_1: 0.7139  loss_ce_2: 0  loss_mask_2: 1.2  loss_dice_2: 0.7146  time: 1.6345  data_time: 0.0298  lr: 9.6575e-05  max_mem: 4826M
[02/27 17:33:23] d2.utils.events INFO:  eta: 1 day, 1:22:52  iter: 2299  total_loss: 8.43  loss_ce: 0  loss_mask: 1.378  loss_dice: 0.791  loss_seg: 0.424  loss_ce_0: 0  loss_mask_0: 1.207  loss_dice_0: 0.7398  loss_ce_1: 0  loss_mask_1: 1.199  loss_dice_1: 0.7308  loss_ce_2: 0  loss_mask_2: 1.191  loss_dice_2: 0.7303  time: 1.6336  data_time: 0.0361  lr: 9.6545e-05  max_mem: 4826M
[02/27 17:33:53] d2.utils.events INFO:  eta: 1 day, 1:19:57  iter: 2319  total_loss: 8.346  loss_ce: 0  loss_mask: 1.396  loss_dice: 0.7817  loss_seg: 0.3789  loss_ce_0: 0  loss_mask_0: 1.22  loss_dice_0: 0.7272  loss_ce_1: 0  loss_mask_1: 1.213  loss_dice_1: 0.7162  loss_ce_2: 0  loss_mask_2: 1.215  loss_dice_2: 0.7148  time: 1.6325  data_time: 0.0271  lr: 9.6515e-05  max_mem: 4826M
[02/27 17:34:22] d2.utils.events INFO:  eta: 1 day, 1:20:04  iter: 2339  total_loss: 8.413  loss_ce: 0  loss_mask: 1.38  loss_dice: 0.7952  loss_seg: 0.4377  loss_ce_0: 0  loss_mask_0: 1.182  loss_dice_0: 0.736  loss_ce_1: 0  loss_mask_1: 1.174  loss_dice_1: 0.733  loss_ce_2: 0  loss_mask_2: 1.174  loss_dice_2: 0.7324  time: 1.6311  data_time: 0.0234  lr: 9.6485e-05  max_mem: 4826M
[02/27 17:34:53] d2.utils.events INFO:  eta: 1 day, 1:20:51  iter: 2359  total_loss: 8.534  loss_ce: 0  loss_mask: 1.474  loss_dice: 0.7843  loss_seg: 0.3988  loss_ce_0: 0  loss_mask_0: 1.249  loss_dice_0: 0.7231  loss_ce_1: 0  loss_mask_1: 1.234  loss_dice_1: 0.7123  loss_ce_2: 0  loss_mask_2: 1.234  loss_dice_2: 0.7116  time: 1.6303  data_time: 0.0260  lr: 9.6454e-05  max_mem: 4826M
[02/27 17:35:24] d2.utils.events INFO:  eta: 1 day, 1:20:45  iter: 2379  total_loss: 8.29  loss_ce: 0  loss_mask: 1.393  loss_dice: 0.7819  loss_seg: 0.3802  loss_ce_0: 0  loss_mask_0: 1.196  loss_dice_0: 0.7285  loss_ce_1: 0  loss_mask_1: 1.189  loss_dice_1: 0.72  loss_ce_2: 0  loss_mask_2: 1.191  loss_dice_2: 0.7188  time: 1.6295  data_time: 0.0312  lr: 9.6424e-05  max_mem: 4826M
[02/27 17:35:56] d2.utils.events INFO:  eta: 1 day, 1:24:09  iter: 2399  total_loss: 8.495  loss_ce: 0  loss_mask: 1.423  loss_dice: 0.7909  loss_seg: 0.3996  loss_ce_0: 0  loss_mask_0: 1.245  loss_dice_0: 0.733  loss_ce_1: 0  loss_mask_1: 1.238  loss_dice_1: 0.7288  loss_ce_2: 0  loss_mask_2: 1.236  loss_dice_2: 0.7287  time: 1.6293  data_time: 0.0333  lr: 9.6394e-05  max_mem: 4826M
[02/27 17:36:27] d2.utils.events INFO:  eta: 1 day, 1:22:45  iter: 2419  total_loss: 8.498  loss_ce: 0  loss_mask: 1.426  loss_dice: 0.7801  loss_seg: 0.4151  loss_ce_0: 0  loss_mask_0: 1.227  loss_dice_0: 0.7179  loss_ce_1: 0  loss_mask_1: 1.22  loss_dice_1: 0.7111  loss_ce_2: 0  loss_mask_2: 1.225  loss_dice_2: 0.7112  time: 1.6287  data_time: 0.0327  lr: 9.6364e-05  max_mem: 4826M
[02/27 17:36:59] d2.utils.events INFO:  eta: 1 day, 1:24:57  iter: 2439  total_loss: 8.369  loss_ce: 0  loss_mask: 1.448  loss_dice: 0.7798  loss_seg: 0.3925  loss_ce_0: 0  loss_mask_0: 1.189  loss_dice_0: 0.7161  loss_ce_1: 0  loss_mask_1: 1.185  loss_dice_1: 0.7108  loss_ce_2: 0  loss_mask_2: 1.18  loss_dice_2: 0.711  time: 1.6285  data_time: 0.0395  lr: 9.6334e-05  max_mem: 4826M
[02/27 17:37:33] d2.utils.events INFO:  eta: 1 day, 1:26:33  iter: 2459  total_loss: 8.342  loss_ce: 0  loss_mask: 1.431  loss_dice: 0.7865  loss_seg: 0.3844  loss_ce_0: 0  loss_mask_0: 1.233  loss_dice_0: 0.7289  loss_ce_1: 0  loss_mask_1: 1.218  loss_dice_1: 0.7263  loss_ce_2: 0  loss_mask_2: 1.219  loss_dice_2: 0.726  time: 1.6288  data_time: 0.0419  lr: 9.6304e-05  max_mem: 4826M
[02/27 17:38:06] d2.utils.events INFO:  eta: 1 day, 1:30:32  iter: 2479  total_loss: 8.33  loss_ce: 0  loss_mask: 1.383  loss_dice: 0.7814  loss_seg: 0.384  loss_ce_0: 0  loss_mask_0: 1.215  loss_dice_0: 0.718  loss_ce_1: 0  loss_mask_1: 1.214  loss_dice_1: 0.7069  loss_ce_2: 0  loss_mask_2: 1.215  loss_dice_2: 0.709  time: 1.6291  data_time: 0.0437  lr: 9.6274e-05  max_mem: 4826M
[02/27 17:38:42] fvcore.common.checkpoint INFO: Saving checkpoint to ./work_dirs/r101_48classes_fixedmatching_finesmoothl1_refinepsmcost/model_0002499.pth
[02/27 17:38:43] mask2former.data.dataset_mappers.mask_former_sceneflow_dataset_mapper INFO: [MaskFormerSceneFlowDatasetMapper] Augmentations used in inference: []
[02/27 17:38:44] d2.data.common INFO: Serializing 4370 elements to byte tensors and concatenating them all ...
[02/27 17:38:44] d2.data.common INFO: Serialized dataset takes 1.22 MiB
[02/27 17:39:07] mask2former INFO: Inference done 11/1093. Dataloading: 0.0049 s/iter. Inference: 0.7436 s/iter. Eval: 0.2103 s/iter. Total: 0.9588 s/iter. ETA=0:17:17
[02/27 17:39:13] mask2former INFO: Inference done 17/1093. Dataloading: 0.0086 s/iter. Inference: 0.7883 s/iter. Eval: 0.2024 s/iter. Total: 0.9994 s/iter. ETA=0:17:55
[02/27 17:39:19] mask2former INFO: Inference done 23/1093. Dataloading: 0.0081 s/iter. Inference: 0.7645 s/iter. Eval: 0.2035 s/iter. Total: 0.9763 s/iter. ETA=0:17:24
[02/27 17:39:25] mask2former INFO: Inference done 29/1093. Dataloading: 0.0081 s/iter. Inference: 0.7607 s/iter. Eval: 0.2170 s/iter. Total: 0.9860 s/iter. ETA=0:17:29
[02/27 17:39:31] mask2former INFO: Inference done 34/1093. Dataloading: 0.0089 s/iter. Inference: 0.7805 s/iter. Eval: 0.2201 s/iter. Total: 1.0098 s/iter. ETA=0:17:49
[02/27 17:39:36] mask2former INFO: Inference done 40/1093. Dataloading: 0.0097 s/iter. Inference: 0.7668 s/iter. Eval: 0.2161 s/iter. Total: 0.9928 s/iter. ETA=0:17:25
[02/27 17:39:41] mask2former INFO: Inference done 45/1093. Dataloading: 0.0097 s/iter. Inference: 0.7678 s/iter. Eval: 0.2175 s/iter. Total: 0.9952 s/iter. ETA=0:17:22
[02/27 17:39:46] mask2former INFO: Inference done 50/1093. Dataloading: 0.0100 s/iter. Inference: 0.7669 s/iter. Eval: 0.2187 s/iter. Total: 0.9958 s/iter. ETA=0:17:18
[02/27 17:39:51] mask2former INFO: Inference done 55/1093. Dataloading: 0.0110 s/iter. Inference: 0.7703 s/iter. Eval: 0.2178 s/iter. Total: 0.9994 s/iter. ETA=0:17:17
[02/27 17:39:57] mask2former INFO: Inference done 61/1093. Dataloading: 0.0106 s/iter. Inference: 0.7598 s/iter. Eval: 0.2198 s/iter. Total: 0.9904 s/iter. ETA=0:17:02
[02/27 17:40:03] mask2former INFO: Inference done 67/1093. Dataloading: 0.0110 s/iter. Inference: 0.7521 s/iter. Eval: 0.2282 s/iter. Total: 0.9915 s/iter. ETA=0:16:57
[02/27 17:40:09] mask2former INFO: Inference done 73/1093. Dataloading: 0.0109 s/iter. Inference: 0.7483 s/iter. Eval: 0.2303 s/iter. Total: 0.9897 s/iter. ETA=0:16:49
[02/27 17:40:14] mask2former INFO: Inference done 78/1093. Dataloading: 0.0108 s/iter. Inference: 0.7495 s/iter. Eval: 0.2333 s/iter. Total: 0.9939 s/iter. ETA=0:16:48
[02/27 17:40:19] mask2former INFO: Inference done 84/1093. Dataloading: 0.0107 s/iter. Inference: 0.7475 s/iter. Eval: 0.2303 s/iter. Total: 0.9888 s/iter. ETA=0:16:37
[02/27 17:40:25] mask2former INFO: Inference done 90/1093. Dataloading: 0.0108 s/iter. Inference: 0.7473 s/iter. Eval: 0.2311 s/iter. Total: 0.9894 s/iter. ETA=0:16:32
[02/27 17:40:31] mask2former INFO: Inference done 95/1093. Dataloading: 0.0107 s/iter. Inference: 0.7470 s/iter. Eval: 0.2357 s/iter. Total: 0.9937 s/iter. ETA=0:16:31
[02/27 17:40:37] mask2former INFO: Inference done 101/1093. Dataloading: 0.0107 s/iter. Inference: 0.7453 s/iter. Eval: 0.2356 s/iter. Total: 0.9918 s/iter. ETA=0:16:23
[02/27 17:40:42] mask2former INFO: Inference done 106/1093. Dataloading: 0.0107 s/iter. Inference: 0.7479 s/iter. Eval: 0.2364 s/iter. Total: 0.9953 s/iter. ETA=0:16:22
[02/27 17:40:48] mask2former INFO: Inference done 112/1093. Dataloading: 0.0110 s/iter. Inference: 0.7504 s/iter. Eval: 0.2326 s/iter. Total: 0.9944 s/iter. ETA=0:16:15
[02/27 17:40:53] mask2former INFO: Inference done 117/1093. Dataloading: 0.0114 s/iter. Inference: 0.7493 s/iter. Eval: 0.2340 s/iter. Total: 0.9950 s/iter. ETA=0:16:11
[02/27 17:40:59] mask2former INFO: Inference done 123/1093. Dataloading: 0.0113 s/iter. Inference: 0.7470 s/iter. Eval: 0.2348 s/iter. Total: 0.9935 s/iter. ETA=0:16:03
[02/27 17:41:04] mask2former INFO: Inference done 129/1093. Dataloading: 0.0112 s/iter. Inference: 0.7443 s/iter. Eval: 0.2339 s/iter. Total: 0.9896 s/iter. ETA=0:15:53
[02/27 17:41:10] mask2former INFO: Inference done 135/1093. Dataloading: 0.0111 s/iter. Inference: 0.7406 s/iter. Eval: 0.2343 s/iter. Total: 0.9862 s/iter. ETA=0:15:44
[02/27 17:41:15] mask2former INFO: Inference done 141/1093. Dataloading: 0.0111 s/iter. Inference: 0.7390 s/iter. Eval: 0.2344 s/iter. Total: 0.9848 s/iter. ETA=0:15:37
[02/27 17:41:21] mask2former INFO: Inference done 146/1093. Dataloading: 0.0112 s/iter. Inference: 0.7400 s/iter. Eval: 0.2365 s/iter. Total: 0.9880 s/iter. ETA=0:15:35
[02/27 17:41:26] mask2former INFO: Inference done 151/1093. Dataloading: 0.0120 s/iter. Inference: 0.7397 s/iter. Eval: 0.2383 s/iter. Total: 0.9902 s/iter. ETA=0:15:32
[02/27 17:41:32] mask2former INFO: Inference done 157/1093. Dataloading: 0.0124 s/iter. Inference: 0.7384 s/iter. Eval: 0.2377 s/iter. Total: 0.9889 s/iter. ETA=0:15:25
[02/27 17:41:37] mask2former INFO: Inference done 162/1093. Dataloading: 0.0123 s/iter. Inference: 0.7396 s/iter. Eval: 0.2375 s/iter. Total: 0.9896 s/iter. ETA=0:15:21
[02/27 17:41:42] mask2former INFO: Inference done 167/1093. Dataloading: 0.0121 s/iter. Inference: 0.7398 s/iter. Eval: 0.2377 s/iter. Total: 0.9900 s/iter. ETA=0:15:16
[02/27 17:41:48] mask2former INFO: Inference done 173/1093. Dataloading: 0.0120 s/iter. Inference: 0.7397 s/iter. Eval: 0.2385 s/iter. Total: 0.9905 s/iter. ETA=0:15:11
[02/27 17:41:54] mask2former INFO: Inference done 178/1093. Dataloading: 0.0121 s/iter. Inference: 0.7437 s/iter. Eval: 0.2399 s/iter. Total: 0.9959 s/iter. ETA=0:15:11
[02/27 17:41:59] mask2former INFO: Inference done 183/1093. Dataloading: 0.0123 s/iter. Inference: 0.7444 s/iter. Eval: 0.2399 s/iter. Total: 0.9968 s/iter. ETA=0:15:07
[02/27 17:42:04] mask2former INFO: Inference done 188/1093. Dataloading: 0.0123 s/iter. Inference: 0.7464 s/iter. Eval: 0.2400 s/iter. Total: 0.9990 s/iter. ETA=0:15:04
[02/27 17:42:09] mask2former INFO: Inference done 193/1093. Dataloading: 0.0123 s/iter. Inference: 0.7473 s/iter. Eval: 0.2398 s/iter. Total: 0.9996 s/iter. ETA=0:14:59
[02/27 17:42:15] mask2former INFO: Inference done 199/1093. Dataloading: 0.0122 s/iter. Inference: 0.7476 s/iter. Eval: 0.2389 s/iter. Total: 0.9990 s/iter. ETA=0:14:53
[02/27 17:42:20] mask2former INFO: Inference done 204/1093. Dataloading: 0.0124 s/iter. Inference: 0.7464 s/iter. Eval: 0.2404 s/iter. Total: 0.9994 s/iter. ETA=0:14:48
[02/27 17:42:25] mask2former INFO: Inference done 209/1093. Dataloading: 0.0122 s/iter. Inference: 0.7470 s/iter. Eval: 0.2406 s/iter. Total: 1.0001 s/iter. ETA=0:14:44
[02/27 17:42:31] mask2former INFO: Inference done 214/1093. Dataloading: 0.0122 s/iter. Inference: 0.7478 s/iter. Eval: 0.2411 s/iter. Total: 1.0014 s/iter. ETA=0:14:40
[02/27 17:42:36] mask2former INFO: Inference done 221/1093. Dataloading: 0.0120 s/iter. Inference: 0.7425 s/iter. Eval: 0.2378 s/iter. Total: 0.9926 s/iter. ETA=0:14:25
[02/27 17:42:41] mask2former INFO: Inference done 228/1093. Dataloading: 0.0118 s/iter. Inference: 0.7382 s/iter. Eval: 0.2345 s/iter. Total: 0.9848 s/iter. ETA=0:14:11
[02/27 17:42:46] mask2former INFO: Inference done 235/1093. Dataloading: 0.0116 s/iter. Inference: 0.7339 s/iter. Eval: 0.2312 s/iter. Total: 0.9770 s/iter. ETA=0:13:58
[02/27 17:42:52] mask2former INFO: Inference done 243/1093. Dataloading: 0.0114 s/iter. Inference: 0.7281 s/iter. Eval: 0.2283 s/iter. Total: 0.9681 s/iter. ETA=0:13:42
[02/27 17:42:57] mask2former INFO: Inference done 251/1093. Dataloading: 0.0112 s/iter. Inference: 0.7231 s/iter. Eval: 0.2244 s/iter. Total: 0.9590 s/iter. ETA=0:13:27
[02/27 17:43:02] mask2former INFO: Inference done 258/1093. Dataloading: 0.0111 s/iter. Inference: 0.7192 s/iter. Eval: 0.2219 s/iter. Total: 0.9524 s/iter. ETA=0:13:15
[02/27 17:43:07] mask2former INFO: Inference done 265/1093. Dataloading: 0.0109 s/iter. Inference: 0.7157 s/iter. Eval: 0.2195 s/iter. Total: 0.9463 s/iter. ETA=0:13:03
[02/27 17:43:13] mask2former INFO: Inference done 273/1093. Dataloading: 0.0108 s/iter. Inference: 0.7110 s/iter. Eval: 0.2170 s/iter. Total: 0.9391 s/iter. ETA=0:12:50
[02/27 17:43:18] mask2former INFO: Inference done 280/1093. Dataloading: 0.0107 s/iter. Inference: 0.7082 s/iter. Eval: 0.2159 s/iter. Total: 0.9350 s/iter. ETA=0:12:40
[02/27 17:43:24] mask2former INFO: Inference done 288/1093. Dataloading: 0.0105 s/iter. Inference: 0.7039 s/iter. Eval: 0.2135 s/iter. Total: 0.9282 s/iter. ETA=0:12:27
[02/27 17:43:29] mask2former INFO: Inference done 295/1093. Dataloading: 0.0104 s/iter. Inference: 0.7012 s/iter. Eval: 0.2117 s/iter. Total: 0.9236 s/iter. ETA=0:12:17
[02/27 17:43:35] mask2former INFO: Inference done 303/1093. Dataloading: 0.0103 s/iter. Inference: 0.6975 s/iter. Eval: 0.2094 s/iter. Total: 0.9175 s/iter. ETA=0:12:04
[02/27 17:43:40] mask2former INFO: Inference done 310/1093. Dataloading: 0.0102 s/iter. Inference: 0.6955 s/iter. Eval: 0.2076 s/iter. Total: 0.9135 s/iter. ETA=0:11:55
[02/27 17:43:45] mask2former INFO: Inference done 317/1093. Dataloading: 0.0101 s/iter. Inference: 0.6929 s/iter. Eval: 0.2060 s/iter. Total: 0.9093 s/iter. ETA=0:11:45
[02/27 17:43:51] mask2former INFO: Inference done 325/1093. Dataloading: 0.0100 s/iter. Inference: 0.6897 s/iter. Eval: 0.2041 s/iter. Total: 0.9040 s/iter. ETA=0:11:34
[02/27 17:43:56] mask2former INFO: Inference done 332/1093. Dataloading: 0.0099 s/iter. Inference: 0.6872 s/iter. Eval: 0.2027 s/iter. Total: 0.9001 s/iter. ETA=0:11:24
[02/27 17:44:01] mask2former INFO: Inference done 339/1093. Dataloading: 0.0098 s/iter. Inference: 0.6848 s/iter. Eval: 0.2014 s/iter. Total: 0.8962 s/iter. ETA=0:11:15
[02/27 17:44:06] mask2former INFO: Inference done 346/1093. Dataloading: 0.0098 s/iter. Inference: 0.6829 s/iter. Eval: 0.2001 s/iter. Total: 0.8931 s/iter. ETA=0:11:07
[02/27 17:44:11] mask2former INFO: Inference done 353/1093. Dataloading: 0.0097 s/iter. Inference: 0.6805 s/iter. Eval: 0.1991 s/iter. Total: 0.8895 s/iter. ETA=0:10:58
[02/27 17:44:16] mask2former INFO: Inference done 360/1093. Dataloading: 0.0097 s/iter. Inference: 0.6787 s/iter. Eval: 0.1982 s/iter. Total: 0.8867 s/iter. ETA=0:10:49
[02/27 17:44:21] mask2former INFO: Inference done 367/1093. Dataloading: 0.0096 s/iter. Inference: 0.6767 s/iter. Eval: 0.1971 s/iter. Total: 0.8836 s/iter. ETA=0:10:41
[02/27 17:44:26] mask2former INFO: Inference done 374/1093. Dataloading: 0.0095 s/iter. Inference: 0.6752 s/iter. Eval: 0.1960 s/iter. Total: 0.8809 s/iter. ETA=0:10:33
[02/27 17:44:32] mask2former INFO: Inference done 382/1093. Dataloading: 0.0094 s/iter. Inference: 0.6728 s/iter. Eval: 0.1947 s/iter. Total: 0.8771 s/iter. ETA=0:10:23
[02/27 17:44:38] mask2former INFO: Inference done 390/1093. Dataloading: 0.0093 s/iter. Inference: 0.6705 s/iter. Eval: 0.1934 s/iter. Total: 0.8734 s/iter. ETA=0:10:14
[02/27 17:44:43] mask2former INFO: Inference done 397/1093. Dataloading: 0.0092 s/iter. Inference: 0.6692 s/iter. Eval: 0.1919 s/iter. Total: 0.8707 s/iter. ETA=0:10:05
[02/27 17:44:48] mask2former INFO: Inference done 404/1093. Dataloading: 0.0092 s/iter. Inference: 0.6676 s/iter. Eval: 0.1910 s/iter. Total: 0.8679 s/iter. ETA=0:09:58
[02/27 17:44:53] mask2former INFO: Inference done 412/1093. Dataloading: 0.0091 s/iter. Inference: 0.6658 s/iter. Eval: 0.1895 s/iter. Total: 0.8646 s/iter. ETA=0:09:48
[02/27 17:44:59] mask2former INFO: Inference done 420/1093. Dataloading: 0.0090 s/iter. Inference: 0.6638 s/iter. Eval: 0.1884 s/iter. Total: 0.8614 s/iter. ETA=0:09:39
[02/27 17:45:04] mask2former INFO: Inference done 427/1093. Dataloading: 0.0090 s/iter. Inference: 0.6623 s/iter. Eval: 0.1875 s/iter. Total: 0.8591 s/iter. ETA=0:09:32
[02/27 17:45:09] mask2former INFO: Inference done 434/1093. Dataloading: 0.0089 s/iter. Inference: 0.6613 s/iter. Eval: 0.1868 s/iter. Total: 0.8572 s/iter. ETA=0:09:24
[02/27 17:45:15] mask2former INFO: Inference done 442/1093. Dataloading: 0.0089 s/iter. Inference: 0.6599 s/iter. Eval: 0.1855 s/iter. Total: 0.8545 s/iter. ETA=0:09:16
[02/27 17:45:20] mask2former INFO: Inference done 450/1093. Dataloading: 0.0088 s/iter. Inference: 0.6583 s/iter. Eval: 0.1844 s/iter. Total: 0.8517 s/iter. ETA=0:09:07
[02/27 17:45:25] mask2former INFO: Inference done 457/1093. Dataloading: 0.0087 s/iter. Inference: 0.6569 s/iter. Eval: 0.1839 s/iter. Total: 0.8498 s/iter. ETA=0:09:00
[02/27 17:45:30] mask2former INFO: Inference done 464/1093. Dataloading: 0.0087 s/iter. Inference: 0.6557 s/iter. Eval: 0.1831 s/iter. Total: 0.8477 s/iter. ETA=0:08:53
[02/27 17:45:36] mask2former INFO: Inference done 472/1093. Dataloading: 0.0086 s/iter. Inference: 0.6542 s/iter. Eval: 0.1823 s/iter. Total: 0.8454 s/iter. ETA=0:08:44
[02/27 17:45:41] mask2former INFO: Inference done 479/1093. Dataloading: 0.0086 s/iter. Inference: 0.6530 s/iter. Eval: 0.1817 s/iter. Total: 0.8435 s/iter. ETA=0:08:37
[02/27 17:45:46] mask2former INFO: Inference done 487/1093. Dataloading: 0.0085 s/iter. Inference: 0.6514 s/iter. Eval: 0.1804 s/iter. Total: 0.8405 s/iter. ETA=0:08:29
[02/27 17:45:52] mask2former INFO: Inference done 494/1093. Dataloading: 0.0085 s/iter. Inference: 0.6506 s/iter. Eval: 0.1797 s/iter. Total: 0.8390 s/iter. ETA=0:08:22
[02/27 17:45:57] mask2former INFO: Inference done 501/1093. Dataloading: 0.0085 s/iter. Inference: 0.6496 s/iter. Eval: 0.1791 s/iter. Total: 0.8373 s/iter. ETA=0:08:15
[02/27 17:46:02] mask2former INFO: Inference done 508/1093. Dataloading: 0.0084 s/iter. Inference: 0.6486 s/iter. Eval: 0.1784 s/iter. Total: 0.8357 s/iter. ETA=0:08:08
[02/27 17:46:07] mask2former INFO: Inference done 515/1093. Dataloading: 0.0084 s/iter. Inference: 0.6476 s/iter. Eval: 0.1780 s/iter. Total: 0.8341 s/iter. ETA=0:08:02
[02/27 17:46:12] mask2former INFO: Inference done 522/1093. Dataloading: 0.0084 s/iter. Inference: 0.6465 s/iter. Eval: 0.1775 s/iter. Total: 0.8326 s/iter. ETA=0:07:55
[02/27 17:46:17] mask2former INFO: Inference done 530/1093. Dataloading: 0.0083 s/iter. Inference: 0.6455 s/iter. Eval: 0.1767 s/iter. Total: 0.8307 s/iter. ETA=0:07:47
[02/27 17:46:22] mask2former INFO: Inference done 537/1093. Dataloading: 0.0083 s/iter. Inference: 0.6445 s/iter. Eval: 0.1762 s/iter. Total: 0.8293 s/iter. ETA=0:07:41
